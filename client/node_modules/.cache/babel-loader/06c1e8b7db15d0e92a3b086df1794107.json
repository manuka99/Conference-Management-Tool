{"ast":null,"code":"var _jsxFileName = \"F:\\\\MANUKA YASAS\\\\sliit_documents\\\\semister5\\\\AF\\\\project\\\\frontend\\\\src\\\\Pages\\\\App\\\\Profile\\\\Security\\\\Session\\\\ActiveSessions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Box, Button, CircularProgress, Divider } from \"@material-ui/core\";\nimport api from \"../../../../../util/api\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SyncIcon from \"@material-ui/icons/Sync\";\nimport PhoneAndroidIcon from \"@material-ui/icons/PhoneAndroid\";\nimport ComputerIcon from \"@material-ui/icons/Computer\";\nimport SessionData from \"./SessionData\";\nimport BugReportIcon from \"@material-ui/icons/BugReport\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  loaderWrapper: {\n    display: \"flex\",\n    padding: \" 0 0  0 80px\",\n    boxSizing: \"border-box\"\n  },\n  sessions_wrap: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    gridColumnGap: theme.spacing(2),\n    gridRowGap: theme.spacing(4)\n  },\n  activeSession: {\n    color: theme.palette.neutral.main\n  }\n}));\n\nfunction ActiveSessions() {\n  _s();\n\n  const [requestLoading, setRequestLoading] = useState(true);\n  const [sessionsData, setSessionsData] = useState([]);\n  const classes = useStyles();\n  const [moreOnSession, setMoreOnSession] = useState(\"\");\n  useEffect(() => {\n    if (requestLoading) {\n      api().get(\"/user/active-sessions\").then(res => {\n        setSessionsData({ ...res.data\n        });\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        setRequestLoading(false);\n      });\n    }\n  }, [requestLoading]);\n\n  const cancelSeeMoreOnSession = () => {\n    setMoreOnSession(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 3,\n    mb: 3,\n    children: [moreOnSession && /*#__PURE__*/_jsxDEV(SessionData, {\n      id: moreOnSession,\n      onClose: cancelSeeMoreOnSession\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Signed in devices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      gutterBottom: true,\n      children: \"This is a list of devices that have logged into your account. Revoke any device that you do not recognize. You can see your sign-in history, including the dates and times that your account was used. You can also see the IP addresses which were used to access your account. These are the details displayed from the device;\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStylePosition: \"outside\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"IP address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Browser/App infomation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Device information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Accessed location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      children: requestLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loaderWrapper,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          className: classes.loader,\n          size: \"50px\",\n          disableShrink: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.sessions_wrap,\n          children: sessionsData.sessions.map(session => {\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              item: true,\n              xs: 6,\n              sm: 4,\n              md: 3,\n              direction: \"column\",\n              alignItems: \"center\",\n              alignContent: \"center\",\n              justify: \"center\",\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: session.deviceType === \"desktop\" ? /*#__PURE__*/_jsxDEV(ComputerIcon, {\n                  className: sessionsData.current === session.id ? classes.activeSession : \"\",\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 25\n                }, this) : session.deviceType === \"bot\" ? /*#__PURE__*/_jsxDEV(BugReportIcon, {\n                  className: sessionsData.current === session.id ? classes.activeSession : \"\",\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(PhoneAndroidIcon, {\n                  className: sessionsData.current === session.id ? classes.activeSession : \"\",\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                item: true,\n                alignItems: \"center\",\n                alignContent: \"center\",\n                justify: \"center\",\n                direction: \"column\",\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: session.ip_address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  className: sessionsData.current === session.id ? classes.activeSession : \"\",\n                  children: sessionsData.current === session.id ? \"Current device\" : session.last_online\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 23\n                }, this), session.deviceType === \"bot\" ? /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: \"Robot | Machine\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: `${session.osInfo}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  justify: \"flex-end\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: () => setMoreOnSession(session.id),\n                  size: \"small\",\n                  style: {\n                    textTransform: \"none\",\n                    padding: \"0\"\n                  },\n                  children: \"more\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this)]\n            }, session.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: () => setRequestLoading(true),\n          startIcon: /*#__PURE__*/_jsxDEV(SyncIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 26\n          }, this),\n          children: \"Refresh device list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ActiveSessions, \"KEx10cGsVTxQ9xJY5woFTTjS9Uw=\", false, function () {\n  return [useStyles];\n});\n\n_c = ActiveSessions;\nexport default ActiveSessions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveSessions\");","map":{"version":3,"sources":["F:/MANUKA YASAS/sliit_documents/semister5/AF/project/frontend/src/Pages/App/Profile/Security/Session/ActiveSessions.js"],"names":["React","useState","useEffect","Grid","Typography","Box","Button","CircularProgress","Divider","api","makeStyles","SyncIcon","PhoneAndroidIcon","ComputerIcon","SessionData","BugReportIcon","useStyles","theme","root","width","loaderWrapper","display","padding","boxSizing","sessions_wrap","flexWrap","justifyContent","alignItems","gridColumnGap","spacing","gridRowGap","activeSession","color","palette","neutral","main","ActiveSessions","requestLoading","setRequestLoading","sessionsData","setSessionsData","classes","moreOnSession","setMoreOnSession","get","then","res","data","catch","error","console","log","finally","cancelSeeMoreOnSession","listStylePosition","loader","sessions","map","session","deviceType","current","id","ip_address","last_online","osInfo","textTransform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Box, Button, CircularProgress, Divider } from \"@material-ui/core\";\r\nimport api from \"../../../../../util/api\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SyncIcon from \"@material-ui/icons/Sync\";\r\nimport PhoneAndroidIcon from \"@material-ui/icons/PhoneAndroid\";\r\nimport ComputerIcon from \"@material-ui/icons/Computer\";\r\nimport SessionData from \"./SessionData\";\r\nimport BugReportIcon from \"@material-ui/icons/BugReport\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  loaderWrapper: {\r\n    display: \"flex\",\r\n    padding: \" 0 0  0 80px\",\r\n    boxSizing: \"border-box\",\r\n  },\r\n  sessions_wrap: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    gridColumnGap: theme.spacing(2),\r\n    gridRowGap: theme.spacing(4),\r\n  },\r\n  activeSession: {\r\n    color: theme.palette.neutral.main,\r\n  },\r\n}));\r\n\r\nfunction ActiveSessions() {\r\n  const [requestLoading, setRequestLoading] = useState(true);\r\n  const [sessionsData, setSessionsData] = useState([]);\r\n  const classes = useStyles();\r\n  const [moreOnSession, setMoreOnSession] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (requestLoading) {\r\n      api()\r\n        .get(\"/user/active-sessions\")\r\n        .then((res) => {\r\n          setSessionsData({ ...res.data });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n        .finally(() => {\r\n          setRequestLoading(false);\r\n        });\r\n    }\r\n  }, [requestLoading]);\r\n\r\n  const cancelSeeMoreOnSession = () => {\r\n    setMoreOnSession(\"\");\r\n  };\r\n\r\n  return (\r\n    <Box mt={3} mb={3}>\r\n      {moreOnSession && (\r\n        <SessionData id={moreOnSession} onClose={cancelSeeMoreOnSession} />\r\n      )}\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Signed in devices\r\n      </Typography>\r\n      <Divider />\r\n      <br />\r\n      <Typography variant=\"body2\" gutterBottom>\r\n        This is a list of devices that have logged into your account. Revoke any\r\n        device that you do not recognize. You can see your sign-in history,\r\n        including the dates and times that your account was used. You can also\r\n        see the IP addresses which were used to access your account. These are\r\n        the details displayed from the device;\r\n      </Typography>\r\n      <ul style={{ listStylePosition: \"outside\" }}>\r\n        <li>IP address</li>\r\n        <li>Browser/App infomation</li>\r\n        <li>Device information</li>\r\n        <li>Accessed location</li>\r\n      </ul>\r\n      <Box mt={3}>\r\n        {requestLoading ? (\r\n          <div className={classes.loaderWrapper}>\r\n            <CircularProgress\r\n              className={classes.loader}\r\n              size=\"50px\"\r\n              disableShrink\r\n            />\r\n          </div>\r\n        ) : (\r\n          <React.Fragment>\r\n            <div className={classes.sessions_wrap}>\r\n              {sessionsData.sessions.map((session) => {\r\n                return (\r\n                  <Grid\r\n                    container\r\n                    item\r\n                    xs={6}\r\n                    sm={4}\r\n                    md={3}\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n                    alignContent=\"center\"\r\n                    justify=\"center\"\r\n                    spacing={2}\r\n                    key={session.id}\r\n                  >\r\n                    <Grid item xs={12}>\r\n                      {session.deviceType === \"desktop\" ? (\r\n                        <ComputerIcon\r\n                          className={\r\n                            sessionsData.current === session.id\r\n                              ? classes.activeSession\r\n                              : \"\"\r\n                          }\r\n                          fontSize=\"large\"\r\n                        />\r\n                      ) : session.deviceType === \"bot\" ? (\r\n                        <BugReportIcon\r\n                          className={\r\n                            sessionsData.current === session.id\r\n                              ? classes.activeSession\r\n                              : \"\"\r\n                          }\r\n                          fontSize=\"large\"\r\n                        />\r\n                      ) : (\r\n                        <PhoneAndroidIcon\r\n                          className={\r\n                            sessionsData.current === session.id\r\n                              ? classes.activeSession\r\n                              : \"\"\r\n                          }\r\n                          fontSize=\"large\"\r\n                        />\r\n                      )}\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                      container\r\n                      item\r\n                      alignItems=\"center\"\r\n                      alignContent=\"center\"\r\n                      justify=\"center\"\r\n                      direction=\"column\"\r\n                      xs={12}\r\n                    >\r\n                      <Grid item>{session.ip_address}</Grid>\r\n                      <Grid\r\n                        item\r\n                        className={\r\n                          sessionsData.current === session.id\r\n                            ? classes.activeSession\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        {sessionsData.current === session.id\r\n                          ? \"Current device\"\r\n                          : session.last_online}\r\n                      </Grid>\r\n                      {session.deviceType === \"bot\" ? (\r\n                        <Grid item>Robot | Machine</Grid>\r\n                      ) : (\r\n                        <Grid item>{`${session.osInfo}`}</Grid>\r\n                      )}\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Button\r\n                        justify=\"flex-end\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => setMoreOnSession(session.id)}\r\n                        size=\"small\"\r\n                        style={{ textTransform: \"none\", padding: \"0\" }}\r\n                      >\r\n                        more\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={() => setRequestLoading(true)}\r\n              startIcon={<SyncIcon />}\r\n            >\r\n              Refresh device list\r\n            </Button>\r\n          </React.Fragment>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ActiveSessions;\r\n"]},"metadata":{},"sourceType":"module"}