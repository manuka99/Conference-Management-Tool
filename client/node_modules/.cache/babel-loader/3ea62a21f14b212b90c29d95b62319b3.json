{"ast":null,"code":"var _jsxFileName = \"F:\\\\MANUKA YASAS\\\\sliit_documents\\\\semister5\\\\AF\\\\project\\\\frontend\\\\src\\\\components\\\\protectedRoutes\\\\AuthRoute.js\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport { isLoggedIn } from \"../../util/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AuthRoute({\n  path,\n  hasAnyRoles,\n  ...rest\n}) {\n  const {\n    userAuth,\n    userRoleValidated\n  } = isLoggedIn(hasAnyRoles);\n  return !userAuth ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this) : !userRoleValidated ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/403\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Route, { ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = AuthRoute;\nexport default AuthRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRoute\");","map":{"version":3,"sources":["F:/MANUKA YASAS/sliit_documents/semister5/AF/project/frontend/src/components/protectedRoutes/AuthRoute.js"],"names":["Route","Navigate","isLoggedIn","AuthRoute","path","hasAnyRoles","rest","userAuth","userRoleValidated"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,UAAT,QAA2B,iBAA3B;;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,WAAR;AAAqB,KAAGC;AAAxB,CAAnB,EAAmD;AACjD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAkCN,UAAU,CAACG,WAAD,CAAlD;AAEA,SAAO,CAACE,QAAD,gBACL,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UADK,GAEH,CAACC,iBAAD,gBACF,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC,MAAb;AAAoB,IAAA,OAAO,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA,UADE,gBAGF,QAAC,KAAD,OAAWF;AAAX;AAAA;AAAA;AAAA;AAAA,UALF;AAOD;;KAVQH,S;AAYT,eAAeA,SAAf","sourcesContent":["import { Route, Navigate } from \"react-router-dom\";\r\nimport { isLoggedIn } from \"../../util/auth\";\r\n\r\nfunction AuthRoute({ path, hasAnyRoles, ...rest }) {\r\n  const { userAuth, userRoleValidated } = isLoggedIn(hasAnyRoles);\r\n\r\n  return !userAuth ? (\r\n    <Navigate to=\"/login\" />\r\n  ) : !userRoleValidated ? (\r\n    <Navigate to=\"/403\" replace={true} />\r\n  ) : (\r\n    <Route {...rest} />\r\n  );\r\n}\r\n\r\nexport default AuthRoute;\r\n"]},"metadata":{},"sourceType":"module"}