{"ast":null,"code":"var _jsxFileName = \"F:\\\\MANUKA YASAS\\\\sliit_documents\\\\semister5\\\\AF\\\\project\\\\frontend\\\\src\\\\Pages\\\\App\\\\Profile\\\\Security\\\\PasswordChange.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Box, Divider } from \"@material-ui/core\";\nimport ButtonProgress from \"../../../../components/common/ButtonProgress/ButtonProgress\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport api from \"../../../../util/api\";\nimport Error from \"../../../../components/alerts/Error\";\nimport swal from \"sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialPasswordData = {\n  current_password: \"\",\n  password: \"\",\n  password_confirmation: \"\",\n  logOutOthers: false\n};\n\nfunction PasswordChange() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [passwordData, setPasswordData] = useState({ ...initialPasswordData\n  });\n  const [errors, setErrors] = useState({});\n\n  const updatePassword = e => {\n    e.preventDefault();\n    setLoading(true);\n    console.log(passwordData);\n    api().put(\"/user/password\", passwordData).then(res => {\n      if (res.status === 200) {\n        setPasswordData({ ...initialPasswordData\n        });\n        swal(\"\", \"User password was updated successfully\", \"success\");\n        setErrors({});\n      }\n    }).catch(error => {\n      if (error.response) {\n        if (error.response.status === 422) {\n          let {\n            message,\n            errors\n          } = error.response.data;\n          setErrors({\n            message,\n            ...errors\n          });\n        }\n      }\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n\n  const formDataChanged = e => {\n    setPasswordData({ ...passwordData,\n      [e.target.name]: e.target.value\n    });\n    setErrors({});\n  };\n\n  const handleFormCheckLogoutOthers = e => {\n    setPasswordData({ ...passwordData,\n      [e.target.name]: e.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Update user password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), errors.message && /*#__PURE__*/_jsxDEV(Error, {\n      message: errors.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 1,\n      mb: 3,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        onSubmit: updatePassword,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                name: \"current_password\",\n                label: \"Current password\",\n                type: \"password\",\n                error: errors.current_password,\n                helperText: errors.current_password || \"Current password must have atleast 8 characters\",\n                inputProps: {\n                  autoComplete: \"new-password\",\n                  form: {\n                    autoComplete: \"off\"\n                  }\n                },\n                onChange: formDataChanged,\n                fullWidth: true,\n                value: passwordData.current_password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              name: \"password\",\n              label: \"New password\",\n              type: \"password\",\n              fullWidth: true,\n              onChange: formDataChanged,\n              helperText: errors.password || \"New password must have at least 8 characters\",\n              error: errors.password,\n              disabled: passwordData.current_password === undefined || passwordData.current_password.length < 8,\n              inputProps: {\n                autoComplete: \"new-password\",\n                form: {\n                  autoComplete: \"off\"\n                }\n              },\n              value: passwordData.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              name: \"password_confirmation\",\n              label: \"Repeat password\",\n              type: \"password\",\n              fullWidth: true,\n              onChange: formDataChanged,\n              error: errors.password_confirmation,\n              helperText: errors.password_confirmation || \"Enter new password again\",\n              disabled: passwordData.password === undefined || passwordData.password.length < 8,\n              inputProps: {\n                autoComplete: \"new-password\",\n                form: {\n                  autoComplete: \"off\"\n                }\n              },\n              value: passwordData.password_confirmation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                color: \"secondary\",\n                name: \"logOutOthers\",\n                value: \"yes\",\n                onChange: handleFormCheckLogoutOthers,\n                checked: passwordData.logOutOthers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this),\n              label: \"Log out of all other connected devices\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(ButtonProgress, {\n              variant: \"contained\",\n              color: \"primary\",\n              size: \"medium\",\n              startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 28\n              }, this),\n              name: \"Update Password\",\n              loading: loading,\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PasswordChange, \"3UVD1iY2LArGQClb96bBJ3piF+k=\");\n\n_c = PasswordChange;\nexport default PasswordChange;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordChange\");","map":{"version":3,"sources":["F:/MANUKA YASAS/sliit_documents/semister5/AF/project/frontend/src/Pages/App/Profile/Security/PasswordChange.js"],"names":["React","useState","Grid","Typography","TextField","FormControlLabel","Checkbox","Box","Divider","ButtonProgress","SaveIcon","api","Error","swal","initialPasswordData","current_password","password","password_confirmation","logOutOthers","PasswordChange","loading","setLoading","passwordData","setPasswordData","errors","setErrors","updatePassword","e","preventDefault","console","log","put","then","res","status","catch","error","response","message","data","finally","formDataChanged","target","name","value","handleFormCheckLogoutOthers","checked","autoComplete","form","undefined","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Box, Divider } from \"@material-ui/core\";\r\nimport ButtonProgress from \"../../../../components/common/ButtonProgress/ButtonProgress\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport api from \"../../../../util/api\";\r\nimport Error from \"../../../../components/alerts/Error\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst initialPasswordData = {\r\n  current_password: \"\",\r\n  password: \"\",\r\n  password_confirmation: \"\",\r\n  logOutOthers: false,\r\n};\r\n\r\nfunction PasswordChange() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [passwordData, setPasswordData] = useState({ ...initialPasswordData });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const updatePassword = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    console.log(passwordData);\r\n    api()\r\n      .put(\"/user/password\", passwordData)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setPasswordData({\r\n            ...initialPasswordData,\r\n          });\r\n          swal(\"\", \"User password was updated successfully\", \"success\");\r\n          setErrors({});\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          if (error.response.status === 422) {\r\n            let { message, errors } = error.response.data;\r\n            setErrors({ message, ...errors });\r\n          }\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const formDataChanged = (e) => {\r\n    setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\r\n    setErrors({});\r\n  };\r\n\r\n  const handleFormCheckLogoutOthers = (e) => {\r\n    setPasswordData({ ...passwordData, [e.target.name]: e.target.checked });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Update user password\r\n      </Typography>\r\n      <Divider />\r\n      {errors.message && <Error message={errors.message} />}\r\n      <Box mt={1} mb={3}>\r\n        <form autoComplete=\"off\" onSubmit={updatePassword}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  name=\"current_password\"\r\n                  label=\"Current password\"\r\n                  type=\"password\"\r\n                  error={errors.current_password}\r\n                  helperText={\r\n                    errors.current_password ||\r\n                    \"Current password must have atleast 8 characters\"\r\n                  }\r\n                  inputProps={{\r\n                    autoComplete: \"new-password\",\r\n                    form: {\r\n                      autoComplete: \"off\",\r\n                    },\r\n                  }}\r\n                  onChange={formDataChanged}\r\n                  fullWidth\r\n                  value={passwordData.current_password}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                name=\"password\"\r\n                label=\"New password\"\r\n                type=\"password\"\r\n                fullWidth\r\n                onChange={formDataChanged}\r\n                helperText={\r\n                  errors.password ||\r\n                  \"New password must have at least 8 characters\"\r\n                }\r\n                error={errors.password}\r\n                disabled={\r\n                  passwordData.current_password === undefined ||\r\n                  passwordData.current_password.length < 8\r\n                }\r\n                inputProps={{\r\n                  autoComplete: \"new-password\",\r\n                  form: {\r\n                    autoComplete: \"off\",\r\n                  },\r\n                }}\r\n                value={passwordData.password}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                name=\"password_confirmation\"\r\n                label=\"Repeat password\"\r\n                type=\"password\"\r\n                fullWidth\r\n                onChange={formDataChanged}\r\n                error={errors.password_confirmation}\r\n                helperText={\r\n                  errors.password_confirmation || \"Enter new password again\"\r\n                }\r\n                disabled={\r\n                  passwordData.password === undefined ||\r\n                  passwordData.password.length < 8\r\n                }\r\n                inputProps={{\r\n                  autoComplete: \"new-password\",\r\n                  form: {\r\n                    autoComplete: \"off\",\r\n                  },\r\n                }}\r\n                value={passwordData.password_confirmation}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    color=\"secondary\"\r\n                    name=\"logOutOthers\"\r\n                    value=\"yes\"\r\n                    onChange={handleFormCheckLogoutOthers}\r\n                    checked={passwordData.logOutOthers}\r\n                  />\r\n                }\r\n                label=\"Log out of all other connected devices\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <ButtonProgress\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"medium\"\r\n                startIcon={<SaveIcon />}\r\n                name=\"Update Password\"\r\n                loading={loading}\r\n                type=\"submit\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PasswordChange;\r\n"]},"metadata":{},"sourceType":"module"}