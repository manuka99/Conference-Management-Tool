{"ast":null,"code":"import store from \"../Redux/store\";\nimport { APP_USER_TOKEN } from \"./AppConstants\";\nexport function isLoggedIn(roles = null) {\n  const state = store.getState().currentUser;\n  const {\n    user\n  } = state.user_data;\n  let userAuth = false;\n  let userRoleValidated = false;\n\n  if (user && user._id) {\n    userAuth = true;\n    userRoleValidated = roles ? roleValidated(roles, user.role) : true;\n  }\n\n  return {\n    userAuth,\n    userRoleValidated\n  };\n}\n\nconst roleValidated = (roles, user_role) => {\n  if (roles.length === 0 || user_role) return roles.includes(user_role);else return false;\n};\n\nexport const authenticate = token => {\n  localStorage.setItem(APP_USER_TOKEN, token);\n};","map":{"version":3,"sources":["F:/MANUKA YASAS/sliit_documents/semister5/AF/project/src/frontend/src/util/auth.js"],"names":["store","APP_USER_TOKEN","isLoggedIn","roles","state","getState","currentUser","user","user_data","userAuth","userRoleValidated","_id","roleValidated","role","user_role","length","includes","authenticate","token","localStorage","setItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,OAAO,SAASC,UAAT,CAAoBC,KAAK,GAAG,IAA5B,EAAkC;AACvC,QAAMC,KAAK,GAAGJ,KAAK,CAACK,QAAN,GAAiBC,WAA/B;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAWH,KAAK,CAACI,SAAvB;AAEA,MAAIC,QAAQ,GAAG,KAAf;AACA,MAAIC,iBAAiB,GAAG,KAAxB;;AAEA,MAAIH,IAAI,IAAIA,IAAI,CAACI,GAAjB,EAAsB;AACpBF,IAAAA,QAAQ,GAAG,IAAX;AACAC,IAAAA,iBAAiB,GAAGP,KAAK,GAAGS,aAAa,CAACT,KAAD,EAAQI,IAAI,CAACM,IAAb,CAAhB,GAAqC,IAA9D;AACD;;AAED,SAAO;AAAEJ,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAP;AACD;;AAED,MAAME,aAAa,GAAG,CAACT,KAAD,EAAQW,SAAR,KAAsB;AAC1C,MAAIX,KAAK,CAACY,MAAN,KAAiB,CAAjB,IAAsBD,SAA1B,EAAqC,OAAOX,KAAK,CAACa,QAAN,CAAeF,SAAf,CAAP,CAArC,KACK,OAAO,KAAP;AACN,CAHD;;AAKA,OAAO,MAAMG,YAAY,GAAIC,KAAD,IAAW;AACrCC,EAAAA,YAAY,CAACC,OAAb,CAAqBnB,cAArB,EAAqCiB,KAArC;AACD,CAFM","sourcesContent":["import store from \"../Redux/store\";\r\nimport { APP_USER_TOKEN } from \"./AppConstants\";\r\n\r\nexport function isLoggedIn(roles = null) {\r\n  const state = store.getState().currentUser;\r\n\r\n  const { user } = state.user_data;\r\n\r\n  let userAuth = false;\r\n  let userRoleValidated = false;\r\n\r\n  if (user && user._id) {\r\n    userAuth = true;\r\n    userRoleValidated = roles ? roleValidated(roles, user.role) : true;\r\n  }\r\n\r\n  return { userAuth, userRoleValidated };\r\n}\r\n\r\nconst roleValidated = (roles, user_role) => {\r\n  if (roles.length === 0 || user_role) return roles.includes(user_role);\r\n  else return false;\r\n};\r\n\r\nexport const authenticate = (token) => {\r\n  localStorage.setItem(APP_USER_TOKEN, token);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}