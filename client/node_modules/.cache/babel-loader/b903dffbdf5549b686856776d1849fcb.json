{"ast":null,"code":"import { APP_USER_TOKEN } from \"./AppConstants\";\nimport store from \"../Redux/store\";\nimport { fetch_user_data_success, user_login, init_request_path, user_logout } from \"../Redux\";\nexport function isLoggedIn(roles = null) {\n  const state = store.getState().currentUser;\n  const user = state.user_data;\n  let userAuth = false;\n  let userRoleValidated = false;\n\n  if (user && user._id) {\n    userAuth = true;\n    userRoleValidated = roles ? roleValidated(roles, user.role) : true;\n  }\n\n  return {\n    userAuth,\n    userRoleValidated\n  };\n}\n\nconst roleValidated = (roles, user_role) => {\n  if (roles.length !== 0 && user_role) return roles.includes(user_role);else return false;\n};\n\nexport const authenticate = (user_data, token) => {\n  localStorage.setItem(APP_USER_TOKEN, token);\n  store.dispatch(fetch_user_data_success(user_data));\n  store.dispatch(user_login());\n  store.dispatch(init_request_path());\n};\nexport const LogOut = () => {\n  localStorage.removeItem(APP_USER_TOKEN);\n  store.dispatch(fetch_user_data_success({}));\n  store.dispatch(user_logout());\n  store.dispatch(init_request_path());\n};\n_c = LogOut;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogOut\");","map":{"version":3,"sources":["F:/MANUKA YASAS/sliit_documents/semister5/AF/project/src/frontend/src/common/auth.js"],"names":["APP_USER_TOKEN","store","fetch_user_data_success","user_login","init_request_path","user_logout","isLoggedIn","roles","state","getState","currentUser","user","user_data","userAuth","userRoleValidated","_id","roleValidated","role","user_role","length","includes","authenticate","token","localStorage","setItem","dispatch","LogOut","removeItem"],"mappings":"AAAA,SAASA,cAAT,QAA+B,gBAA/B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SACEC,uBADF,EAEEC,UAFF,EAGEC,iBAHF,EAIEC,WAJF,QAKO,UALP;AAOA,OAAO,SAASC,UAAT,CAAoBC,KAAK,GAAG,IAA5B,EAAkC;AACvC,QAAMC,KAAK,GAAGP,KAAK,CAACQ,QAAN,GAAiBC,WAA/B;AACA,QAAMC,IAAI,GAAGH,KAAK,CAACI,SAAnB;AAEA,MAAIC,QAAQ,GAAG,KAAf;AACA,MAAIC,iBAAiB,GAAG,KAAxB;;AAEA,MAAIH,IAAI,IAAIA,IAAI,CAACI,GAAjB,EAAsB;AACpBF,IAAAA,QAAQ,GAAG,IAAX;AACAC,IAAAA,iBAAiB,GAAGP,KAAK,GAAGS,aAAa,CAACT,KAAD,EAAQI,IAAI,CAACM,IAAb,CAAhB,GAAqC,IAA9D;AACD;;AAED,SAAO;AAAEJ,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAP;AACD;;AAED,MAAME,aAAa,GAAG,CAACT,KAAD,EAAQW,SAAR,KAAsB;AAC1C,MAAIX,KAAK,CAACY,MAAN,KAAiB,CAAjB,IAAsBD,SAA1B,EAAqC,OAAOX,KAAK,CAACa,QAAN,CAAeF,SAAf,CAAP,CAArC,KACK,OAAO,KAAP;AACN,CAHD;;AAKA,OAAO,MAAMG,YAAY,GAAG,CAACT,SAAD,EAAYU,KAAZ,KAAsB;AAChDC,EAAAA,YAAY,CAACC,OAAb,CAAqBxB,cAArB,EAAqCsB,KAArC;AACArB,EAAAA,KAAK,CAACwB,QAAN,CAAevB,uBAAuB,CAACU,SAAD,CAAtC;AACAX,EAAAA,KAAK,CAACwB,QAAN,CAAetB,UAAU,EAAzB;AACAF,EAAAA,KAAK,CAACwB,QAAN,CAAerB,iBAAiB,EAAhC;AACD,CALM;AAOP,OAAO,MAAMsB,MAAM,GAAG,MAAM;AAC1BH,EAAAA,YAAY,CAACI,UAAb,CAAwB3B,cAAxB;AACAC,EAAAA,KAAK,CAACwB,QAAN,CAAevB,uBAAuB,CAAC,EAAD,CAAtC;AACAD,EAAAA,KAAK,CAACwB,QAAN,CAAepB,WAAW,EAA1B;AACAJ,EAAAA,KAAK,CAACwB,QAAN,CAAerB,iBAAiB,EAAhC;AACD,CALM;KAAMsB,M","sourcesContent":["import { APP_USER_TOKEN } from \"./AppConstants\";\r\nimport store from \"../Redux/store\";\r\nimport {\r\n  fetch_user_data_success,\r\n  user_login,\r\n  init_request_path,\r\n  user_logout,\r\n} from \"../Redux\";\r\n\r\nexport function isLoggedIn(roles = null) {\r\n  const state = store.getState().currentUser;\r\n  const user = state.user_data;\r\n\r\n  let userAuth = false;\r\n  let userRoleValidated = false;\r\n\r\n  if (user && user._id) {\r\n    userAuth = true;\r\n    userRoleValidated = roles ? roleValidated(roles, user.role) : true;\r\n  }\r\n\r\n  return { userAuth, userRoleValidated };\r\n}\r\n\r\nconst roleValidated = (roles, user_role) => {\r\n  if (roles.length !== 0 && user_role) return roles.includes(user_role);\r\n  else return false;\r\n};\r\n\r\nexport const authenticate = (user_data, token) => {\r\n  localStorage.setItem(APP_USER_TOKEN, token);\r\n  store.dispatch(fetch_user_data_success(user_data));\r\n  store.dispatch(user_login());\r\n  store.dispatch(init_request_path());\r\n};\r\n\r\nexport const LogOut = () => {\r\n  localStorage.removeItem(APP_USER_TOKEN);\r\n  store.dispatch(fetch_user_data_success({}));\r\n  store.dispatch(user_logout());\r\n  store.dispatch(init_request_path());\r\n};\r\n"]},"metadata":{},"sourceType":"module"}