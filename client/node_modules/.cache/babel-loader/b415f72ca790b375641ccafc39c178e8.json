{"ast":null,"code":"var _jsxFileName = \"F:\\\\MANUKA YASAS\\\\sliit_documents\\\\semister5\\\\AF\\\\project\\\\frontend\\\\src\\\\components\\\\ConfirmPassword\\\\ConfirmPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Grid } from \"@material-ui/core\";\nimport store from \"../../Redux/store\";\nimport ButtonProgress from \"../common/ButtonProgress/ButtonProgress\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport BlockIcon from \"@material-ui/icons/Block\";\nimport api from \"../../util/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"inline-block\",\n    padding: \"14px 0px\",\n    boxSizing: \"border-box\",\n    outline: \"none\",\n    border: \"none\"\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5]\n  },\n  icon: {\n    fontSize: \"56px\",\n    display: \"block\",\n    margin: \"0 auto\",\n    border: \"3px solid\",\n    borderColor: theme.palette.black,\n    borderRadius: \"50%\",\n    padding: \"10px\",\n    boxSizing: \"border-box\"\n  },\n  typoCenter: {\n    display: \"block\",\n    margin: \"0 auto\",\n    textAlign: \"center\",\n    maxWidth: \"440px\"\n  },\n  forms: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    maxWidth: \"620px\",\n    padding: \"20px 10px\",\n    boxSizing: \"border-box\"\n  }\n}));\n\nfunction ConfirmPassword({\n  handlePasswordConfirm\n}) {\n  _s();\n\n  const state = store.getState();\n  const {\n    currentUser\n  } = state;\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [modalOpen, setModalOpen] = useState(true);\n  const [userData, setUserData] = useState({\n    email: currentUser.user_data.user.email\n  });\n  const [errors, setErrors] = useState({});\n  const classes = useStyles();\n\n  const submitConfirmPassword = e => {\n    e.preventDefault();\n    setConfirmLoading(true);\n    api().post(\"/user/confirm-password\", userData).then(res => {\n      if (res.status === 201) handlePasswordConfirm();\n    }).catch(err => {\n      if (err.response.status === 422) setErrors({ ...err.response.data.errors\n      });\n    }).finally(() => {\n      setConfirmLoading(false);\n    });\n  };\n\n  const cancelVerification = () => {\n    setModalOpen(false);\n    handlePasswordConfirm(false);\n  };\n\n  const handleFormChange = e => {\n    setErrors({});\n    setUserData({ ...userData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: modalOpen,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    children: /*#__PURE__*/_jsxDEV(Fade, {\n      in: modalOpen,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 12,\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(LockIcon, {\n          className: classes.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.typoCenter,\n            gutterBottom: true,\n            variant: \"h6\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.typoCenter,\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: \"You are trying to access a password protected content therefore user must validate their credentials befour proceeding.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submitConfirmPassword,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              className: classes.forms,\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"email\",\n                  type: \"email\",\n                  label: \"Email\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  required: true,\n                  disabled: true,\n                  defaultValue: currentUser.user_data.user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: errors.password,\n                  type: \"password\",\n                  name: \"password\",\n                  label: \"Password\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  required: true,\n                  autoFocus: true,\n                  helperText: errors.password,\n                  onChange: handleFormChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(ButtonProgress, {\n                  type: \"submit\",\n                  size: \"medium\",\n                  color: \"primary\",\n                  name: \"Verify password\",\n                  variant: \"outlined\",\n                  loading: confirmLoading,\n                  startIcon: /*#__PURE__*/_jsxDEV(LockOpenIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 32\n                  }, this),\n                  spinColor: \"primary\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"medium\",\n                  color: \"secondary\",\n                  variant: \"outlined\",\n                  loading: confirmLoading,\n                  handleButtonClick: cancelVerification,\n                  startIcon: /*#__PURE__*/_jsxDEV(BlockIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 32\n                  }, this),\n                  onClick: cancelVerification,\n                  fullWidth: true,\n                  children: \"Cancel verification\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConfirmPassword, \"K/NXCvNjwb1TJs6SLQT+CEjV2CI=\", false, function () {\n  return [useStyles];\n});\n\n_c = ConfirmPassword;\nexport default ConfirmPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmPassword\");","map":{"version":3,"sources":["F:/MANUKA YASAS/sliit_documents/semister5/AF/project/frontend/src/components/ConfirmPassword/ConfirmPassword.js"],"names":["React","useState","makeStyles","Card","CardContent","Button","Typography","LockIcon","TextField","Grid","store","ButtonProgress","LockOpenIcon","Modal","Backdrop","Fade","BlockIcon","api","useStyles","theme","root","display","padding","boxSizing","outline","border","modal","alignItems","justifyContent","paper","backgroundColor","palette","background","boxShadow","shadows","icon","fontSize","margin","borderColor","black","borderRadius","typoCenter","textAlign","maxWidth","forms","ConfirmPassword","handlePasswordConfirm","state","getState","currentUser","confirmLoading","setConfirmLoading","modalOpen","setModalOpen","userData","setUserData","email","user_data","user","errors","setErrors","classes","submitConfirmPassword","e","preventDefault","post","then","res","status","catch","err","response","data","finally","cancelVerification","handleFormChange","target","name","value","timeout","password"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport store from \"../../Redux/store\";\r\nimport ButtonProgress from \"../common/ButtonProgress/ButtonProgress\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\nimport api from \"../../util/api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"inline-block\",\r\n    padding: \"14px 0px\",\r\n    boxSizing: \"border-box\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n  },\r\n  icon: {\r\n    fontSize: \"56px\",\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    border: \"3px solid\",\r\n    borderColor: theme.palette.black,\r\n    borderRadius: \"50%\",\r\n    padding: \"10px\",\r\n    boxSizing: \"border-box\",\r\n  },\r\n  typoCenter: {\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    textAlign: \"center\",\r\n    maxWidth: \"440px\",\r\n  },\r\n  forms: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    maxWidth: \"620px\",\r\n    padding: \"20px 10px\",\r\n    boxSizing: \"border-box\",\r\n  },\r\n}));\r\n\r\nfunction ConfirmPassword({ handlePasswordConfirm }) {\r\n  const state = store.getState();\r\n  const { currentUser } = state;\r\n\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [modalOpen, setModalOpen] = useState(true);\r\n  const [userData, setUserData] = useState({\r\n    email: currentUser.user_data.user.email,\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const submitConfirmPassword = (e) => {\r\n    e.preventDefault();\r\n    setConfirmLoading(true);\r\n    api()\r\n      .post(\"/user/confirm-password\", userData)\r\n      .then((res) => {\r\n        if (res.status === 201) handlePasswordConfirm();\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 422)\r\n          setErrors({ ...err.response.data.errors });\r\n      })\r\n      .finally(() => {\r\n        setConfirmLoading(false);\r\n      });\r\n  };\r\n\r\n  const cancelVerification = () => {\r\n    setModalOpen(false);\r\n    handlePasswordConfirm(false);\r\n  };\r\n\r\n  const handleFormChange = (e) => {\r\n    setErrors({});\r\n    setUserData({ ...userData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className={classes.modal}\r\n      open={modalOpen}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n    >\r\n      <Fade in={modalOpen}>\r\n        <Card elevation={12} className={classes.root}>\r\n          <LockIcon className={classes.icon} />\r\n          <CardContent>\r\n            <Typography\r\n              className={classes.typoCenter}\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              Confirm Password\r\n            </Typography>\r\n            <Typography\r\n              className={classes.typoCenter}\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n              component=\"p\"\r\n            >\r\n              You are trying to access a password protected content therefore\r\n              user must validate their credentials befour proceeding.\r\n            </Typography>\r\n            <form onSubmit={submitConfirmPassword}>\r\n              <Grid className={classes.forms} container spacing={3}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    disabled\r\n                    defaultValue={currentUser.user_data.user.email}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    error={errors.password}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    autoFocus\r\n                    helperText={errors.password}\r\n                    onChange={handleFormChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <ButtonProgress\r\n                    type=\"submit\"\r\n                    size=\"medium\"\r\n                    color=\"primary\"\r\n                    name=\"Verify password\"\r\n                    variant=\"outlined\"\r\n                    loading={confirmLoading}\r\n                    startIcon={<LockOpenIcon />}\r\n                    spinColor=\"primary\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    size=\"medium\"\r\n                    color=\"secondary\"\r\n                    variant=\"outlined\"\r\n                    loading={confirmLoading}\r\n                    handleButtonClick={cancelVerification}\r\n                    startIcon={<BlockIcon />}\r\n                    onClick={cancelVerification}\r\n                    fullWidth\r\n                  >\r\n                    Cancel verification\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ConfirmPassword;\r\n"]},"metadata":{},"sourceType":"module"}