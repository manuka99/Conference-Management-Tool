{"ast":null,"code":"var _jsxFileName = \"F:\\\\MANUKA YASAS\\\\sliit_documents\\\\semister5\\\\AF\\\\project\\\\frontend\\\\src\\\\Pages\\\\App\\\\Profile\\\\Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Box, Button } from \"@material-ui/core\";\nimport ButtonProgress from \"../../../components/common/ButtonProgress/ButtonProgress\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport api from \"../../../util/api\";\nimport swal from \"sweetalert\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Error from \"../../../components/alerts/Error\";\nimport CustomLinearProgress from \"../../../components/Progress/CustomLinearProgress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Account() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [editData, setEditData] = useState(false);\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n\n  const fetchUserData = () => {\n    setLoading(true);\n    setErrors({});\n    api().get(\"/user\").then(res => {\n      setUserData({ ...res.data.user\n      });\n    }).catch(err => {}).finally(() => {\n      setLoading(false);\n      setEditData(false);\n    });\n  };\n\n  const updateUserProfile = e => {\n    e.preventDefault();\n    setBtnLoading(true);\n    setErrors({});\n    api().put(\"/user/profile-information\", userData).then(res => {\n      if (res.status === 200) {\n        swal(\"\", \"User profile was successfully updated.\", \"success\");\n        fetchUserData();\n      }\n    }).catch(error => {\n      if (error.response) {\n        if (error.response.status === 422) {\n          let {\n            message,\n            errors\n          } = error.response.data;\n          setErrors({\n            message,\n            ...errors\n          });\n        }\n      }\n    }).finally(() => {\n      setBtnLoading(false);\n    });\n  };\n\n  const handleChange = event => {\n    setUserData({ ...userData,\n      [event.target.name]: event.target.value\n    });\n    setErrors({ ...errors,\n      [event.target.name]: null\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Profile Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(CustomLinearProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mb: 4,\n        children: errors.message && /*#__PURE__*/_jsxDEV(Error, {\n          message: errors.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: updateUserProfile,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: errors.fname,\n              helperText: errors.fname,\n              variant: \"outlined\",\n              InputProps: {\n                readOnly: !editData\n              },\n              required: true,\n              name: \"fname\",\n              label: \"First name\",\n              fullWidth: true,\n              value: userData.fname === null ? \"\" : userData.fname,\n              onChange: handleChange,\n              InputLabelProps: {\n                shrink: userData.fname ? true : false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: errors.lname,\n              helperText: errors.lname,\n              variant: \"outlined\",\n              InputProps: {\n                readOnly: !editData\n              },\n              required: true,\n              name: \"lname\",\n              label: \"Last name\",\n              fullWidth: true,\n              value: userData.lname === null ? \"\" : userData.lname,\n              onChange: handleChange,\n              InputLabelProps: {\n                shrink: userData.lname ? true : false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: errors.email,\n              helperText: errors.email,\n              variant: \"outlined\",\n              InputProps: {\n                readOnly: !editData\n              },\n              required: true,\n              name: \"email\",\n              label: \"Email\",\n              type: \"email\",\n              fullWidth: true,\n              value: userData.email === null ? \"\" : userData.email,\n              onChange: handleChange,\n              InputLabelProps: {\n                shrink: userData.email ? true : false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: errors.address,\n              helperText: errors.address,\n              variant: \"outlined\",\n              InputProps: {\n                readOnly: !editData\n              },\n              name: \"address\",\n              label: \"Home Address\",\n              fullWidth: true,\n              value: userData.address === null ? \"\" : userData.address,\n              onChange: handleChange,\n              InputLabelProps: {\n                shrink: userData.address ? true : false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: errors.city,\n              helperText: errors.city,\n              variant: \"outlined\",\n              InputProps: {\n                readOnly: !editData\n              },\n              required: true,\n              name: \"city\",\n              label: \"City\",\n              fullWidth: true,\n              value: userData.city === null ? \"\" : userData.city,\n              onChange: handleChange,\n              InputLabelProps: {\n                shrink: userData.city ? true : false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: errors.state,\n              helperText: errors.state,\n              variant: \"outlined\",\n              InputProps: {\n                readOnly: !editData\n              },\n              name: \"state\",\n              label: \"State/Province/Region\",\n              fullWidth: true,\n              value: userData.state === null ? \"\" : userData.state,\n              onChange: handleChange,\n              InputLabelProps: {\n                shrink: userData.state ? true : false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: errors.zip,\n              helperText: errors.zip,\n              variant: \"outlined\",\n              InputProps: {\n                readOnly: !editData\n              },\n              required: true,\n              name: \"zip\",\n              label: \"Zip / Postal code\",\n              fullWidth: true,\n              value: userData.zip === null ? \"\" : userData.zip,\n              onChange: handleChange,\n              InputLabelProps: {\n                shrink: userData.zip ? true : false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              InputProps: {\n                readOnly: !editData\n              },\n              required: true,\n              name: \"country\",\n              label: \"Country\",\n              fullWidth: true,\n              value: \"Sri Lanka\",\n              InputLabelProps: {\n                shrink: true ? true : false\n              },\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), editData ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(ButtonProgress, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              size: \"medium\",\n              startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 32\n              }, this),\n              name: \"Update profile\",\n              loading: btnLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              size: \"medium\",\n              startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 32\n              }, this),\n              onClick: () => setEditData(true),\n              children: \"Edit profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Account, \"PklxCtxBg8j4lj/6dVa6Kxm9wVc=\");\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["F:/MANUKA YASAS/sliit_documents/semister5/AF/project/frontend/src/Pages/App/Profile/Account.js"],"names":["React","useEffect","useState","Grid","Typography","TextField","Box","Button","ButtonProgress","SaveIcon","api","swal","EditIcon","Error","CustomLinearProgress","Account","loading","setLoading","btnLoading","setBtnLoading","userData","setUserData","editData","setEditData","errors","setErrors","fetchUserData","get","then","res","data","user","catch","err","finally","updateUserProfile","e","preventDefault","put","status","error","response","message","handleChange","event","target","name","value","fname","readOnly","shrink","lname","email","address","city","state","zip"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Box, Button } from \"@material-ui/core\";\r\nimport ButtonProgress from \"../../../components/common/ButtonProgress/ButtonProgress\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport api from \"../../../util/api\";\r\nimport swal from \"sweetalert\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Error from \"../../../components/alerts/Error\";\r\nimport CustomLinearProgress from \"../../../components/Progress/CustomLinearProgress\";\r\n\r\nfunction Account() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [btnLoading, setBtnLoading] = useState(false);\r\n  const [userData, setUserData] = useState({});\r\n  const [editData, setEditData] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const fetchUserData = () => {\r\n    setLoading(true);\r\n    setErrors({});\r\n    api()\r\n      .get(\"/user\")\r\n      .then((res) => {\r\n        setUserData({ ...res.data.user });\r\n      })\r\n      .catch((err) => {})\r\n      .finally(() => {\r\n        setLoading(false);\r\n        setEditData(false);\r\n      });\r\n  };\r\n\r\n  const updateUserProfile = (e) => {\r\n    e.preventDefault();\r\n    setBtnLoading(true);\r\n    setErrors({});\r\n    api()\r\n      .put(\"/user/profile-information\", userData)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          swal(\"\", \"User profile was successfully updated.\", \"success\");\r\n          fetchUserData();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          if (error.response.status === 422) {\r\n            let { message, errors } = error.response.data;\r\n            setErrors({ message, ...errors });\r\n          }\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setBtnLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setUserData({ ...userData, [event.target.name]: event.target.value });\r\n    setErrors({ ...errors, [event.target.name]: null });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Profile Details\r\n      </Typography>\r\n      {loading ? (\r\n        <CustomLinearProgress />\r\n      ) : (\r\n        <Box mt={3} mb={2}>\r\n          <Box mb={4}>\r\n            {errors.message && <Error message={errors.message} />}\r\n          </Box>\r\n          <form noValidate autoComplete=\"off\" onSubmit={updateUserProfile}>\r\n            <Grid container spacing={4}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  error={errors.fname}\r\n                  helperText={errors.fname}\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: !editData,\r\n                  }}\r\n                  required\r\n                  name=\"fname\"\r\n                  label=\"First name\"\r\n                  fullWidth\r\n                  value={userData.fname === null ? \"\" : userData.fname}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{ shrink: userData.fname ? true : false }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  error={errors.lname}\r\n                  helperText={errors.lname}\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: !editData,\r\n                  }}\r\n                  required\r\n                  name=\"lname\"\r\n                  label=\"Last name\"\r\n                  fullWidth\r\n                  value={userData.lname === null ? \"\" : userData.lname}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{ shrink: userData.lname ? true : false }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  error={errors.email}\r\n                  helperText={errors.email}\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: !editData,\r\n                  }}\r\n                  required\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  type=\"email\"\r\n                  fullWidth\r\n                  value={userData.email === null ? \"\" : userData.email}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{ shrink: userData.email ? true : false }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  error={errors.address}\r\n                  helperText={errors.address}\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: !editData,\r\n                  }}\r\n                  name=\"address\"\r\n                  label=\"Home Address\"\r\n                  fullWidth\r\n                  value={userData.address === null ? \"\" : userData.address}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{ shrink: userData.address ? true : false }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  error={errors.city}\r\n                  helperText={errors.city}\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: !editData,\r\n                  }}\r\n                  required\r\n                  name=\"city\"\r\n                  label=\"City\"\r\n                  fullWidth\r\n                  value={userData.city === null ? \"\" : userData.city}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{ shrink: userData.city ? true : false }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  error={errors.state}\r\n                  helperText={errors.state}\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: !editData,\r\n                  }}\r\n                  name=\"state\"\r\n                  label=\"State/Province/Region\"\r\n                  fullWidth\r\n                  value={userData.state === null ? \"\" : userData.state}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{ shrink: userData.state ? true : false }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  error={errors.zip}\r\n                  helperText={errors.zip}\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: !editData,\r\n                  }}\r\n                  required\r\n                  name=\"zip\"\r\n                  label=\"Zip / Postal code\"\r\n                  fullWidth\r\n                  value={userData.zip === null ? \"\" : userData.zip}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{ shrink: userData.zip ? true : false }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: !editData,\r\n                  }}\r\n                  required\r\n                  name=\"country\"\r\n                  label=\"Country\"\r\n                  fullWidth\r\n                  value=\"Sri Lanka\"\r\n                  InputLabelProps={{ shrink: true ? true : false }}\r\n                  disabled\r\n                />\r\n              </Grid>\r\n              {editData ? (\r\n                <Grid item xs={12}>\r\n                  <ButtonProgress\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    startIcon={<SaveIcon />}\r\n                    name=\"Update profile\"\r\n                    loading={btnLoading}\r\n                  />\r\n                </Grid>\r\n              ) : (\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    startIcon={<EditIcon />}\r\n                    onClick={() => setEditData(true)}\r\n                  >\r\n                    Edit profile\r\n                  </Button>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </form>\r\n        </Box>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Account;\r\n"]},"metadata":{},"sourceType":"module"}