{"ast":null,"code":"import axios from \"axios\";\nimport store from \"../Redux/store\";\nimport { set_error_data, fetch_user_data, change_redirect_route } from \"../Redux\";\nimport swal from \"sweetalert\";\nexport default function api(nonApi = false) {\n  const api = axios.create({\n    baseURL: `http://localhost:8000${nonApi ? \"\" : \"/api\"}`,\n    withCredentials: true\n  });\n  api.interceptors.response.use(response => response, error => {\n    //  const originalRequest = error.config;\n    if (error.response) {\n      if (error.response.status === 401) {\n        store.dispatch(fetch_user_data());\n      } else if (error.response.status === 403) {\n        //no required roles\n        store.dispatch(set_error_data({\n          title: \" 403: You do not have permision for the requested content.\",\n          body: \"You either tried some shady route or you came here by mistake. Whichever it is, try using the navigation, if you think this is an mistake please refresh or try log in again.\"\n        }));\n      } else if (error.response.status === 404) {\n        store.dispatch(change_redirect_route(\"/404\"));\n        return Promise.reject(error);\n      } else if (error.response.status === 419) {\n        swal(\"Unexpected error 419: Refresh the webpage and try again\");\n      } else if (error.response.status === 422) {\n        //errors in form submit\n        return Promise.reject(error);\n      } else if (error.response.status === 423) {\n        //password confirmation\n        return Promise.reject(error);\n      } else if (error.response.status === 500) {\n        if (error.response.data.message) swal(error.response.data.message);else swal(error.message);\n        return Promise.reject(error);\n      } else {\n        swal(error.message);\n        return Promise.reject(error);\n      }\n    } else {\n      swal(error.message);\n      return Promise.reject(error);\n    }\n\n    return Promise.reject(error);\n  });\n  return api;\n}\nexport const upload = (file, index, onUploadProgress) => {\n  let formData = new FormData();\n  formData.append(\"image\", file);\n  formData.append(\"index\", index);\n  console.log(formData);\n  return api().post(\"/files\", formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    },\n    onUploadProgress\n  });\n};","map":{"version":3,"sources":["F:/MANUKA YASAS/sliit_documents/semister5/AF/project/frontend/src/util/api.js"],"names":["axios","store","set_error_data","fetch_user_data","change_redirect_route","swal","api","nonApi","create","baseURL","withCredentials","interceptors","response","use","error","status","dispatch","title","body","Promise","reject","data","message","upload","file","index","onUploadProgress","formData","FormData","append","console","log","post","headers"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport store from \"../Redux/store\";\r\nimport {\r\n  set_error_data,\r\n  fetch_user_data,\r\n  change_redirect_route,\r\n} from \"../Redux\";\r\nimport swal from \"sweetalert\";\r\n\r\nexport default function api(nonApi = false) {\r\n  const api = axios.create({\r\n    baseURL: `http://localhost:8000${nonApi ? \"\" : \"/api\"}`,\r\n    withCredentials: true,\r\n  });\r\n\r\n  api.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      //  const originalRequest = error.config;\r\n      if (error.response) {\r\n        if (error.response.status === 401) {\r\n          store.dispatch(fetch_user_data());\r\n        } else if (error.response.status === 403) {\r\n          //no required roles\r\n          store.dispatch(\r\n            set_error_data({\r\n              title:\r\n                \" 403: You do not have permision for the requested content.\",\r\n              body:\r\n                \"You either tried some shady route or you came here by mistake. Whichever it is, try using the navigation, if you think this is an mistake please refresh or try log in again.\",\r\n            })\r\n          );\r\n        } else if (error.response.status === 404) {\r\n          store.dispatch(change_redirect_route(\"/404\"));\r\n          return Promise.reject(error);\r\n        } else if (error.response.status === 419) {\r\n          swal(\"Unexpected error 419: Refresh the webpage and try again\");\r\n        } else if (error.response.status === 422) {\r\n          //errors in form submit\r\n          return Promise.reject(error);\r\n        } else if (error.response.status === 423) {\r\n          //password confirmation\r\n          return Promise.reject(error);\r\n        } else if (error.response.status === 500) {\r\n          if (error.response.data.message) swal(error.response.data.message);\r\n          else swal(error.message);\r\n          return Promise.reject(error);\r\n        } else {\r\n          swal(error.message);\r\n          return Promise.reject(error);\r\n        }\r\n      } else {\r\n        swal(error.message);\r\n        return Promise.reject(error);\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  return api;\r\n}\r\n\r\nexport const upload = (file, index, onUploadProgress) => {\r\n  let formData = new FormData();\r\n\r\n  formData.append(\"image\", file);\r\n  formData.append(\"index\", index);\r\n\r\n  console.log(formData);\r\n\r\n  return api().post(\"/files\", formData, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n    onUploadProgress,\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}