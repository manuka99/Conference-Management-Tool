{"ast":null,"code":"import axios from \"axios\";\nimport store from \"../Redux/store\";\nimport { fetch_user_data } from \"../Redux\";\nimport swal from \"sweetalert\";\nimport { APP_USER_TOKEN } from \"./AppConstants\";\nexport default function Api(nonApi = false) {\n  let user_token = localStorage.getItem(APP_USER_TOKEN);\n  const Api = axios.create({\n    baseURL: `http://localhost:5000${nonApi ? \"\" : \"/api\"}`,\n    timeout: 5000,\n    headers: {\n      Authorization: `Bearer ${user_token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  Api.interceptors.response.use(response => response, error => {\n    //  const originalRequest = error.config;\n    if (error.response) {\n      const {\n        status,\n        data\n      } = error.response;\n      if (data && data.data.msg) swal(data.data.msg);\n\n      if (status === 400) {} else if (status === 401) {\n        store.dispatch(fetch_user_data());\n      } else if (status === 403) {\n        //no required roles\n        swal(\"403: You do not have permision for the requested content.\");\n      } else if (status === 404) {} else if (status === 419) {\n        swal(\"Unexpected error 419: Refresh the webpage and try again\");\n      } else if (status === 422) {//errors in form submit\n      } else if (status === 423) {//password confirmation\n      } else if (status === 500) swal(error.message);else swal(error.message);\n    } else {\n      swal(error.message);\n    }\n\n    return Promise.reject(error);\n  });\n  return Api;\n}\n_c = Api;\n\nvar _c;\n\n$RefreshReg$(_c, \"Api\");","map":{"version":3,"sources":["F:/MANUKA YASAS/sliit_documents/semister5/AF/project/src/Frontend/src/common/Api.js"],"names":["axios","store","fetch_user_data","swal","APP_USER_TOKEN","Api","nonApi","user_token","localStorage","getItem","create","baseURL","timeout","headers","Authorization","interceptors","response","use","error","status","data","msg","dispatch","message","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,eAAT,QAAgC,UAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,eAAe,SAASC,GAAT,CAAaC,MAAM,GAAG,KAAtB,EAA6B;AAC1C,MAAIC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqBL,cAArB,CAAjB;AACA,QAAMC,GAAG,GAAGL,KAAK,CAACU,MAAN,CAAa;AACvBC,IAAAA,OAAO,EAAG,wBAAuBL,MAAM,GAAG,EAAH,GAAQ,MAAO,EAD/B;AAEvBM,IAAAA,OAAO,EAAE,IAFc;AAGvBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASP,UAAW,EAD7B;AAEP,sBAAgB;AAFT;AAHc,GAAb,CAAZ;AASAF,EAAAA,GAAG,CAACU,YAAJ,CAAiBC,QAAjB,CAA0BC,GAA1B,CACGD,QAAD,IAAcA,QADhB,EAEGE,KAAD,IAAW;AACT;AACA,QAAIA,KAAK,CAACF,QAAV,EAAoB;AAClB,YAAM;AAAEG,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAmBF,KAAK,CAACF,QAA/B;AACA,UAAII,IAAI,IAAIA,IAAI,CAACA,IAAL,CAAUC,GAAtB,EAA2BlB,IAAI,CAACiB,IAAI,CAACA,IAAL,CAAUC,GAAX,CAAJ;;AAC3B,UAAIF,MAAM,KAAK,GAAf,EAAoB,CACnB,CADD,MACO,IAAIA,MAAM,KAAK,GAAf,EAAoB;AACzBlB,QAAAA,KAAK,CAACqB,QAAN,CAAepB,eAAe,EAA9B;AACD,OAFM,MAEA,IAAIiB,MAAM,KAAK,GAAf,EAAoB;AACzB;AACAhB,QAAAA,IAAI,CAAC,2DAAD,CAAJ;AACD,OAHM,MAGA,IAAIgB,MAAM,KAAK,GAAf,EAAoB,CAC1B,CADM,MACA,IAAIA,MAAM,KAAK,GAAf,EAAoB;AACzBhB,QAAAA,IAAI,CAAC,yDAAD,CAAJ;AACD,OAFM,MAEA,IAAIgB,MAAM,KAAK,GAAf,EAAoB,CACzB;AACD,OAFM,MAEA,IAAIA,MAAM,KAAK,GAAf,EAAoB,CACzB;AACD,OAFM,MAEA,IAAIA,MAAM,KAAK,GAAf,EAAoBhB,IAAI,CAACe,KAAK,CAACK,OAAP,CAAJ,CAApB,KACFpB,IAAI,CAACe,KAAK,CAACK,OAAP,CAAJ;AACN,KAlBD,MAkBO;AACLpB,MAAAA,IAAI,CAACe,KAAK,CAACK,OAAP,CAAJ;AACD;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAeP,KAAf,CAAP;AACD,GA1BH;AA6BA,SAAOb,GAAP;AACD;KAzCuBA,G","sourcesContent":["import axios from \"axios\";\r\nimport store from \"../Redux/store\";\r\nimport { fetch_user_data } from \"../Redux\";\r\nimport swal from \"sweetalert\";\r\nimport { APP_USER_TOKEN } from \"./AppConstants\";\r\n\r\nexport default function Api(nonApi = false) {\r\n  let user_token = localStorage.getItem(APP_USER_TOKEN);\r\n  const Api = axios.create({\r\n    baseURL: `http://localhost:5000${nonApi ? \"\" : \"/api\"}`,\r\n    timeout: 5000,\r\n    headers: {\r\n      Authorization: `Bearer ${user_token}`,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  Api.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      //  const originalRequest = error.config;\r\n      if (error.response) {\r\n        const { status, data } = error.response;\r\n        if (data && data.data.msg) swal(data.data.msg);\r\n        if (status === 400) {\r\n        } else if (status === 401) {\r\n          store.dispatch(fetch_user_data());\r\n        } else if (status === 403) {\r\n          //no required roles\r\n          swal(\"403: You do not have permision for the requested content.\");\r\n        } else if (status === 404) {\r\n        } else if (status === 419) {\r\n          swal(\"Unexpected error 419: Refresh the webpage and try again\");\r\n        } else if (status === 422) {\r\n          //errors in form submit\r\n        } else if (status === 423) {\r\n          //password confirmation\r\n        } else if (status === 500) swal(error.message);\r\n        else swal(error.message);\r\n      } else {\r\n        swal(error.message);\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  return Api;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}