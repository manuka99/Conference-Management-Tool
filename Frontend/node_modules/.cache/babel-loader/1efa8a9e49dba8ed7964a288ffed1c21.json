{"ast":null,"code":"var _jsxFileName = \"F:\\\\MANUKA YASAS\\\\sliit_documents\\\\semister5\\\\AF\\\\project\\\\src\\\\Frontend\\\\src\\\\components\\\\Breadcrumb\\\\Breadcrumb.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Link from \"@material-ui/core/Link\";\nimport { Box } from \"@material-ui/core\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport GrainIcon from \"@material-ui/icons/Grain\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  link: {\n    display: \"flex\",\n    cursor: \"pointer\",\n    textTransform: \"capitalize\"\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20\n  },\n  textLink: {\n    textTransform: \"capitalize\"\n  }\n}));\nexport function Breadcrumb() {\n  _s();\n\n  const classes = useStyles();\n  let location = useLocation();\n  let currentRoutes = [];\n  currentRoutes = location.pathname !== \"/\" ? location.pathname.split(\"/\") : [];\n  currentRoutes.shift();\n  currentRoutes.shift();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 8,\n    mb: 3,\n    children: /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      \"aria-label\": \"breadcrumb\",\n      maxItems: 5,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        color: \"inherit\",\n        component: NavLink,\n        to: \"/\",\n        className: classes.link,\n        children: [/*#__PURE__*/_jsxDEV(HomeIcon, {\n          className: classes.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), \"Home\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), currentRoutes.length !== 0 && /*#__PURE__*/_jsxDEV(Link, {\n        color: \"inherit\",\n        component: NavLink,\n        to: \"/app\",\n        className: classes.link,\n        children: [/*#__PURE__*/_jsxDEV(GrainIcon, {\n          className: classes.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), \"Panel\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), currentRoutes.length !== 0 ? currentRoutes.length === 1 ? /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.textLink,\n        color: \"textPrimary\",\n        children: currentRoutes[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this) : currentRoutes.map((route, index) => {\n        return index !== currentRoutes.length - 1 ? /*#__PURE__*/_jsxDEV(Link, {\n          component: NavLink,\n          color: \"inherit\",\n          className: classes.link,\n          to: route,\n          children: route\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.textLink,\n          color: \"textPrimary\",\n          children: route\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textPrimary\",\n        className: classes.textLink,\n        children: [/*#__PURE__*/_jsxDEV(GrainIcon, {\n          className: classes.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), \"Panel\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Breadcrumb, \"iVCX2yDQgo1lOrIkgS31pg3flb4=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c = Breadcrumb;\nexport default Breadcrumb;\n\nvar _c;\n\n$RefreshReg$(_c, \"Breadcrumb\");","map":{"version":3,"sources":["F:/MANUKA YASAS/sliit_documents/semister5/AF/project/src/Frontend/src/components/Breadcrumb/Breadcrumb.js"],"names":["React","Typography","Breadcrumbs","Link","Box","NavLink","useLocation","HomeIcon","makeStyles","createStyles","GrainIcon","useStyles","theme","link","display","cursor","textTransform","icon","marginRight","spacing","width","height","textLink","Breadcrumb","classes","location","currentRoutes","pathname","split","shift","length","map","route","index"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport GrainIcon from \"@material-ui/icons/Grain\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    link: {\r\n      display: \"flex\",\r\n      cursor: \"pointer\",\r\n      textTransform: \"capitalize\",\r\n    },\r\n    icon: {\r\n      marginRight: theme.spacing(0.5),\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    textLink: {\r\n      textTransform: \"capitalize\",\r\n    },\r\n  })\r\n);\r\n\r\nexport function Breadcrumb() {\r\n  const classes = useStyles();\r\n  let location = useLocation();\r\n  let currentRoutes = [];\r\n\r\n  currentRoutes = location.pathname !== \"/\" ? location.pathname.split(\"/\") : [];\r\n  currentRoutes.shift();\r\n  currentRoutes.shift();\r\n\r\n  return (\r\n    <Box mt={8} mb={3}>\r\n      <Breadcrumbs aria-label=\"breadcrumb\" maxItems={5}>\r\n        <Link\r\n          color=\"inherit\"\r\n          component={NavLink}\r\n          to={\"/\"}\r\n          className={classes.link}\r\n        >\r\n          <HomeIcon className={classes.icon} />\r\n          Home\r\n        </Link>\r\n\r\n        {currentRoutes.length !== 0 && (\r\n          <Link\r\n            color=\"inherit\"\r\n            component={NavLink}\r\n            to={\"/app\"}\r\n            className={classes.link}\r\n          >\r\n            <GrainIcon className={classes.icon} />\r\n            Panel\r\n          </Link>\r\n        )}\r\n\r\n        {currentRoutes.length !== 0 ? (\r\n          currentRoutes.length === 1 ? (\r\n            <Typography className={classes.textLink} color=\"textPrimary\">\r\n              {currentRoutes[0]}\r\n            </Typography>\r\n          ) : (\r\n            currentRoutes.map((route, index) => {\r\n              return index !== currentRoutes.length - 1 ? (\r\n                <Link\r\n                  component={NavLink}\r\n                  key={index}\r\n                  color=\"inherit\"\r\n                  className={classes.link}\r\n                  to={route}\r\n                >\r\n                  {route}\r\n                </Link>\r\n              ) : (\r\n                <Typography\r\n                  key={index}\r\n                  className={classes.textLink}\r\n                  color=\"textPrimary\"\r\n                >\r\n                  {route}\r\n                </Typography>\r\n              );\r\n            })\r\n          )\r\n        ) : (\r\n          <Typography color=\"textPrimary\" className={classes.textLink}>\r\n            <GrainIcon className={classes.icon} />\r\n            Panel\r\n          </Typography>\r\n        )}\r\n      </Breadcrumbs>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Breadcrumb;\r\n"]},"metadata":{},"sourceType":"module"}