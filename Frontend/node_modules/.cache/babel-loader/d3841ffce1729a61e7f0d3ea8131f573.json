{"ast":null,"code":"import store from \"../Redux/store\";\nexport function isLoggedIn(roles = null) {\n  const state = store.getState().currentUser;\n  const {\n    user\n  } = state.user_data;\n  let userAuth = false;\n  let userRoleValidated = false;\n\n  if (user && user._id) {\n    userAuth = true;\n    userRoleValidated = roles ? roleValidated(roles, user.role) : true;\n  }\n\n  return {\n    userAuth,\n    userRoleValidated\n  };\n}\n\nconst roleValidated = (roles, user) => {\n  let validated = false;\n\n  if (roles != null && user_data.user != null) {\n    roles.forEach(role => {\n      user_data.roles.forEach(user_role => {\n        if (role === user_role.name) {\n          console.log(`Role: ${role}, ${user_role.name}`);\n          validated = true;\n        }\n      });\n    });\n  }\n\n  return validated;\n};","map":{"version":3,"sources":["F:/MANUKA YASAS/sliit_documents/semister5/AF/project/src/frontend/src/util/auth.js"],"names":["store","isLoggedIn","roles","state","getState","currentUser","user","user_data","userAuth","userRoleValidated","_id","roleValidated","role","validated","forEach","user_role","name","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AAEA,OAAO,SAASC,UAAT,CAAoBC,KAAK,GAAG,IAA5B,EAAkC;AACvC,QAAMC,KAAK,GAAGH,KAAK,CAACI,QAAN,GAAiBC,WAA/B;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAWH,KAAK,CAACI,SAAvB;AAEA,MAAIC,QAAQ,GAAG,KAAf;AACA,MAAIC,iBAAiB,GAAG,KAAxB;;AAEA,MAAIH,IAAI,IAAIA,IAAI,CAACI,GAAjB,EAAsB;AACpBF,IAAAA,QAAQ,GAAG,IAAX;AACAC,IAAAA,iBAAiB,GAAGP,KAAK,GAAGS,aAAa,CAACT,KAAD,EAAQI,IAAI,CAACM,IAAb,CAAhB,GAAqC,IAA9D;AACD;;AAED,SAAO;AAAEJ,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAP;AACD;;AAED,MAAME,aAAa,GAAG,CAACT,KAAD,EAAQI,IAAR,KAAiB;AACrC,MAAIO,SAAS,GAAG,KAAhB;;AACA,MAAIX,KAAK,IAAI,IAAT,IAAiBK,SAAS,CAACD,IAAV,IAAkB,IAAvC,EAA6C;AAC3CJ,IAAAA,KAAK,CAACY,OAAN,CAAeF,IAAD,IAAU;AACtBL,MAAAA,SAAS,CAACL,KAAV,CAAgBY,OAAhB,CAAyBC,SAAD,IAAe;AACrC,YAAIH,IAAI,KAAKG,SAAS,CAACC,IAAvB,EAA6B;AAC3BC,UAAAA,OAAO,CAACC,GAAR,CAAa,SAAQN,IAAK,KAAIG,SAAS,CAACC,IAAK,EAA7C;AACAH,UAAAA,SAAS,GAAG,IAAZ;AACD;AACF,OALD;AAMD,KAPD;AAQD;;AACD,SAAOA,SAAP;AACD,CAbD","sourcesContent":["import store from \"../Redux/store\";\r\n\r\nexport function isLoggedIn(roles = null) {\r\n  const state = store.getState().currentUser;\r\n\r\n  const { user } = state.user_data;\r\n\r\n  let userAuth = false;\r\n  let userRoleValidated = false;\r\n\r\n  if (user && user._id) {\r\n    userAuth = true;\r\n    userRoleValidated = roles ? roleValidated(roles, user.role) : true;\r\n  }\r\n\r\n  return { userAuth, userRoleValidated };\r\n}\r\n\r\nconst roleValidated = (roles, user) => {\r\n  let validated = false;\r\n  if (roles != null && user_data.user != null) {\r\n    roles.forEach((role) => {\r\n      user_data.roles.forEach((user_role) => {\r\n        if (role === user_role.name) {\r\n          console.log(`Role: ${role}, ${user_role.name}`);\r\n          validated = true;\r\n        }\r\n      });\r\n    });\r\n  }\r\n  return validated;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}