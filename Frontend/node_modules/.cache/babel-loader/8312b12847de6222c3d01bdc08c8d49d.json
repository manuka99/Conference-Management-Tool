{"ast":null,"code":"var _jsxFileName = \"F:\\\\MANUKA YASAS\\\\sliit_documents\\\\semister5\\\\AF\\\\project\\\\frontend\\\\src\\\\Pages\\\\App\\\\Profile\\\\TwoStepVerification\\\\EnableComponents\\\\EnableSteps.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { usePrompt } from \"react-router-dom\";\nimport RecoveryCodes from \"../RecoveryCodesComponent/RecoveryCodes\";\nimport api from \"../../../../../util/api\";\nimport { TwoFactorStateContext } from \"../Main\";\nimport swal from \"sweetalert\";\nimport QRcodeComponent from \"../QRcodeComponent/QRcodeComponent\";\nimport { Box, CircularProgress } from \"@material-ui/core\";\nimport ButtonProgress from \"../../../../../components/common/ButtonProgress/ButtonProgress\";\nimport ConfirmPassword from \"../../../../../components/ConfirmPassword/ConfirmPassword\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  loaderWrapper: {\n    height: \"140px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n}));\n\nfunction EnableSteps() {\n  _s();\n\n  const [recoveryCodes, setRecoveryCodes] = useState([]);\n  const [qrCode, setQrCode] = useState(\"\");\n  const twoFactorStateContext = useContext(TwoFactorStateContext);\n  const [isStepOne, setIsStepOne] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [tOTPCode, setTOTPCode] = useState(\"\");\n  const [isConfirming, setIsConfirming] = useState(false);\n  const classes = useStyles();\n  useEffect(() => {\n    fetchQrCode();\n    fetchRecoveryCodes();\n  }, []);\n  usePrompt(\"Have you downloaded or copied your recovery codes and scan the Qr code ? these credential are required at your next sign in after the set up procedure is completed.\", true);\n\n  const fetchQrCode = () => {\n    api().get(\"/user/two-factor-qr-code\").then(res => {\n      setQrCode(res.data.svg);\n      console.log(res);\n    }).catch(err => {\n      if (err.response) {\n        if (err.response.status === 423) {\n          setIsConfirming(true);\n        }\n      }\n    });\n  };\n\n  const fetchRecoveryCodes = () => {\n    api().get(\"/user/two-factor-recovery-codes\").then(res => {\n      setRecoveryCodes(res.data);\n    }).catch(err => {\n      if (err.response) {\n        if (err.response.status === 423) {\n          setIsConfirming(true);\n        }\n      }\n    });\n  };\n\n  const handleMainClick = () => {\n    if (isStepOne) {\n      setIsStepOne(false);\n    } else if (!isNaN(tOTPCode) && tOTPCode.length !== 6) {\n      swal(\"Please enter the valid 6-digit-code from app\");\n    } else {\n      //send the qr code validation and enable 2fa\n      setLoading(true);\n      api().post(\"/user/two-factor-authentication-enable\", {\n        code: tOTPCode\n      }).then(response => {\n        if (response.status === 200) twoFactorStateContext.dispatch();\n      }).catch(e => {\n        if (e.response) {\n          if (e.response.status === 422) {\n            setErrors({ ...e.response.data\n            });\n          } else if (e.response.status === 423) {\n            setIsConfirming(true);\n          }\n        }\n      }).finally(() => {\n        setLoading(false);\n      });\n    }\n  };\n\n  const handleSubClick = () => {\n    if (!isStepOne) {\n      setIsStepOne(true);\n    }\n  };\n\n  const handleTotpCode = e => {\n    setTOTPCode(e.target.value);\n    setErrors({});\n  };\n\n  const handlePasswordConfirm = (status = true) => {\n    if (status) {\n      handleMainClick();\n    }\n\n    setIsConfirming(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [isConfirming && /*#__PURE__*/_jsxDEV(ConfirmPassword, {\n      handlePasswordConfirm: handlePasswordConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), recoveryCodes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.loaderWrapper,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        className: classes.loader,\n        size: \"50px\",\n        disableShrink: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"#6CC070\"\n            },\n            children: \"Set up Two factor authentication\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            variant: \"outlined\",\n            color: \"secondary\",\n            onClick: () => {\n              api().delete(\"/user/two-factor-authentication\");\n              twoFactorStateContext.dispatch();\n            },\n            startIcon: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 28\n            }, this),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: \"Use your phone as your second step to sign in. Two-factor authentication adds an additional layer of security to your account by requiring more than just a password to log in. Two-factor authentication adds an extra layer of security to your account. In addition to your username and password, you\\u2019ll need to enter a code that Pizza Apes sends to you via text or an app on your phone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"* Make sure that you follow the bellow two methods and save the codes and scan the qr code properly. You can disable Two Factor Authentication at any moment by confirming your password.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), isStepOne && recoveryCodes.length > 0 && /*#__PURE__*/_jsxDEV(RecoveryCodes, {\n          recoveryCodes: recoveryCodes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this), !isStepOne && qrCode && /*#__PURE__*/_jsxDEV(QRcodeComponent, {\n          qrCode: qrCode,\n          errors: errors,\n          handleTotpCode: handleTotpCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          color: \"error\",\n          children: \"* You will not be able to access your account if you do not follow the above steps properly. You can request support from our team at any moment.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonProgress, {\n          disabled: true,\n          size: \"large\",\n          variant: \"contained\",\n          color: !isStepOne ? \"secondary\" : \"primary\",\n          loading: loading,\n          handleButtonClick: handleMainClick,\n          fullWidth: true,\n          endIcon: isStepOne && /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 37\n          }, this),\n          name: isStepOne ? \"Next\" : \"Enable two factor authentication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), !isStepOne && /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disabled: !isStepOne && !qrCode,\n            size: \"medium\",\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: handleSubClick,\n            startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 30\n            }, this),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EnableSteps, \"rzl6QPy6mUxuTQO6Uuqhp7BXsXs=\", false, function () {\n  return [useStyles, usePrompt];\n});\n\n_c = EnableSteps;\nexport default EnableSteps;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnableSteps\");","map":{"version":3,"sources":["F:/MANUKA YASAS/sliit_documents/semister5/AF/project/frontend/src/Pages/App/Profile/TwoStepVerification/EnableComponents/EnableSteps.js"],"names":["React","useState","useEffect","useContext","makeStyles","CardContent","Button","Typography","ArrowForwardIcon","ArrowBackIcon","usePrompt","RecoveryCodes","api","TwoFactorStateContext","swal","QRcodeComponent","Box","CircularProgress","ButtonProgress","ConfirmPassword","CancelIcon","useStyles","theme","root","width","loaderWrapper","height","display","alignItems","justifyContent","EnableSteps","recoveryCodes","setRecoveryCodes","qrCode","setQrCode","twoFactorStateContext","isStepOne","setIsStepOne","loading","setLoading","errors","setErrors","tOTPCode","setTOTPCode","isConfirming","setIsConfirming","classes","fetchQrCode","fetchRecoveryCodes","get","then","res","data","svg","console","log","catch","err","response","status","handleMainClick","isNaN","length","post","code","dispatch","e","finally","handleSubClick","handleTotpCode","target","value","handlePasswordConfirm","loader","color","delete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { usePrompt } from \"react-router-dom\";\r\nimport RecoveryCodes from \"../RecoveryCodesComponent/RecoveryCodes\";\r\nimport api from \"../../../../../util/api\";\r\nimport { TwoFactorStateContext } from \"../Main\";\r\nimport swal from \"sweetalert\";\r\nimport QRcodeComponent from \"../QRcodeComponent/QRcodeComponent\";\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport ButtonProgress from \"../../../../../components/common/ButtonProgress/ButtonProgress\";\r\nimport ConfirmPassword from \"../../../../../components/ConfirmPassword/ConfirmPassword\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  loaderWrapper: {\r\n    height: \"140px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nfunction EnableSteps() {\r\n  const [recoveryCodes, setRecoveryCodes] = useState([]);\r\n  const [qrCode, setQrCode] = useState(\"\");\r\n  const twoFactorStateContext = useContext(TwoFactorStateContext);\r\n  const [isStepOne, setIsStepOne] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [tOTPCode, setTOTPCode] = useState(\"\");\r\n  const [isConfirming, setIsConfirming] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    fetchQrCode();\r\n    fetchRecoveryCodes();\r\n  }, []);\r\n\r\n  usePrompt(\r\n    \"Have you downloaded or copied your recovery codes and scan the Qr code ? these credential are required at your next sign in after the set up procedure is completed.\",\r\n    true\r\n  );\r\n\r\n  const fetchQrCode = () => {\r\n    api()\r\n      .get(\"/user/two-factor-qr-code\")\r\n      .then((res) => {\r\n        setQrCode(res.data.svg);\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          if (err.response.status === 423) {\r\n            setIsConfirming(true);\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const fetchRecoveryCodes = () => {\r\n    api()\r\n      .get(\"/user/two-factor-recovery-codes\")\r\n      .then((res) => {\r\n        setRecoveryCodes(res.data);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          if (err.response.status === 423) {\r\n            setIsConfirming(true);\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleMainClick = () => {\r\n    if (isStepOne) {\r\n      setIsStepOne(false);\r\n    } else if (!isNaN(tOTPCode) && tOTPCode.length !== 6) {\r\n      swal(\"Please enter the valid 6-digit-code from app\");\r\n    } else {\r\n      //send the qr code validation and enable 2fa\r\n      setLoading(true);\r\n      api()\r\n        .post(\"/user/two-factor-authentication-enable\", { code: tOTPCode })\r\n        .then((response) => {\r\n          if (response.status === 200) twoFactorStateContext.dispatch();\r\n        })\r\n        .catch((e) => {\r\n          if (e.response) {\r\n            if (e.response.status === 422) {\r\n              setErrors({ ...e.response.data });\r\n            } else if (e.response.status === 423) {\r\n              setIsConfirming(true);\r\n            }\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleSubClick = () => {\r\n    if (!isStepOne) {\r\n      setIsStepOne(true);\r\n    }\r\n  };\r\n\r\n  const handleTotpCode = (e) => {\r\n    setTOTPCode(e.target.value);\r\n    setErrors({});\r\n  };\r\n\r\n  const handlePasswordConfirm = (status = true) => {\r\n    if (status) {\r\n      handleMainClick();\r\n    }\r\n    setIsConfirming(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {isConfirming && (\r\n        <ConfirmPassword handlePasswordConfirm={handlePasswordConfirm} />\r\n      )}\r\n      {recoveryCodes.length === 0 ? (\r\n        <div className={classes.loaderWrapper}>\r\n          <CircularProgress\r\n            className={classes.loader}\r\n            size=\"50px\"\r\n            disableShrink\r\n          />\r\n        </div>\r\n      ) : (\r\n        <React.Fragment>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h6\">\r\n              <span style={{ color: \"#6CC070\" }}>\r\n                Set up Two factor authentication\r\n              </span>\r\n            </Typography>\r\n            <Box mb={2}>\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  api().delete(\"/user/two-factor-authentication\");\r\n                  twoFactorStateContext.dispatch();\r\n                }}\r\n                startIcon={<CancelIcon />}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Box>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n              Use your phone as your second step to sign in. Two-factor\r\n              authentication adds an additional layer of security to your\r\n              account by requiring more than just a password to log in.\r\n              Two-factor authentication adds an extra layer of security to your\r\n              account. In addition to your username and password, you’ll need to\r\n              enter a code that Pizza Apes sends to you via text or an app on\r\n              your phone.\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n              <strong>\r\n                * Make sure that you follow the bellow two methods and save the\r\n                codes and scan the qr code properly. You can disable Two Factor\r\n                Authentication at any moment by confirming your password.\r\n              </strong>\r\n            </Typography>\r\n            {isStepOne && recoveryCodes.length > 0 && (\r\n              <RecoveryCodes recoveryCodes={recoveryCodes} />\r\n            )}\r\n            {!isStepOne && qrCode && (\r\n              <QRcodeComponent\r\n                qrCode={qrCode}\r\n                errors={errors}\r\n                handleTotpCode={handleTotpCode}\r\n              />\r\n            )}\r\n\r\n            <Typography variant=\"subtitle2\" color=\"error\">\r\n              * You will not be able to access your account if you do not follow\r\n              the above steps properly. You can request support from our team at\r\n              any moment.\r\n            </Typography>\r\n            <br />\r\n            <ButtonProgress\r\n              disabled={true}\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              color={!isStepOne ? \"secondary\" : \"primary\"}\r\n              loading={loading}\r\n              handleButtonClick={handleMainClick}\r\n              fullWidth\r\n              endIcon={isStepOne && <ArrowForwardIcon />}\r\n              name={isStepOne ? \"Next\" : \"Enable two factor authentication\"}\r\n            />\r\n            {!isStepOne && (\r\n              <Box mt={2}>\r\n                <Button\r\n                  disabled={!isStepOne && !qrCode}\r\n                  size=\"medium\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  onClick={handleSubClick}\r\n                  startIcon={<ArrowBackIcon />}\r\n                >\r\n                  Back\r\n                </Button>\r\n              </Box>\r\n            )}\r\n          </CardContent>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EnableSteps;\r\n"]},"metadata":{},"sourceType":"module"}