{"ast":null,"code":"var _jsxFileName = \"F:\\\\MANUKA YASAS\\\\sliit_documents\\\\semister5\\\\AF\\\\project\\\\src\\\\frontend\\\\src\\\\Pages\\\\Public\\\\Auth\\\\ResetPassword\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Api from \"../../../../util/Api\";\nimport swal from \"sweetalert\";\nimport { useNavigate } from \"react-router\";\nimport { Link as Link_NAV, useParams } from \"react-router-dom\";\nimport ButtonProgress from \"../../../../components/common/ButtonProgress/ButtonProgress\";\nimport Error from \"../../../../components/alerts/Error\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox, { CheckboxProps } from \"@material-ui/core/Checkbox\";\nimport HelperTexts from \"../../../../components/HelperTexts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  user_details: {\n    flexGrow: 1,\n    margin: theme.spacing(2, 0, 2, 0)\n  }\n}));\nexport default function Index() {\n  _s();\n\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const {\n    token,\n    email,\n    username\n  } = useParams();\n  const [resetInfo, setResetInfo] = useState({\n    token,\n    email\n  });\n  const [errors, setErrors] = useState({});\n\n  const handleForm = event => {\n    setResetInfo({ ...resetInfo,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const resetPassword = () => {\n    setErrors({});\n    Api().post(`/public/reset-password`, resetInfo).then(res => {\n      swal(\"You have successfully changed your password.\");\n    }).catch(err => err.response && err.response.data && setErrors({\n      msg: err.response.data.data.msg,\n      ...err.response.data.data.params\n    }));\n  };\n\n  const cancelPasswordReset = () => {\n    navigate(\"/\");\n  };\n\n  const handleLogOutOfDevices = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.user_details,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 6,\n          justify: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 1,\n            children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 7,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(ButtonProgress, {\n              type: \"button\",\n              fullWidth: true,\n              variant: \"outlined\",\n              color: \"secondary\",\n              name: \"cancel\",\n              size: \"small\",\n              handleButtonClick: cancelPasswordReset\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), errors.msg && /*#__PURE__*/_jsxDEV(Error, {\n        message: errors.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"New password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\",\n          onChange: handleForm,\n          error: errors.password ? true : false,\n          helperText: errors.password && /*#__PURE__*/_jsxDEV(HelperTexts, {\n            texts: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"confirm_password\",\n          label: \"Repeat new password\",\n          type: \"password\",\n          id: \"confirm_password\",\n          onChange: handleForm,\n          error: errors.confirm_password ? true : false,\n          helperText: errors.confirm_password && /*#__PURE__*/_jsxDEV(HelperTexts, {\n            texts: errors.confirm_password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: state.checkedA,\n            onChange: handleLogOutOfDevices,\n            name: \"checkedA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this),\n          label: \"Secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          onClick: resetPassword,\n          children: \"Change password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              component: Link_NAV,\n              to: \"/public/auth/register\",\n              variant: \"body2\",\n              children: \"Not a user? Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              component: Link_NAV,\n              to: \"/public/auth//login\",\n              variant: \"body2\",\n              children: \"Already have an account? Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Index, \"RltZuCQhVKq5OnWt4pitCtgICUE=\", false, function () {\n  return [useStyles, useNavigate, useParams];\n});\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["F:/MANUKA YASAS/sliit_documents/semister5/AF/project/src/frontend/src/Pages/Public/Auth/ResetPassword/index.js"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","Link","Grid","LockOutlinedIcon","Typography","makeStyles","Container","Api","swal","useNavigate","Link_NAV","useParams","ButtonProgress","Error","FormControlLabel","Checkbox","CheckboxProps","HelperTexts","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","user_details","flexGrow","Index","classes","navigate","token","email","username","resetInfo","setResetInfo","errors","setErrors","handleForm","event","target","name","value","resetPassword","post","then","res","catch","err","response","data","msg","params","cancelPasswordReset","handleLogOutOfDevices","setState","state","checked","password","confirm_password","checkedA"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Api from \"../../../../util/Api\";\r\nimport swal from \"sweetalert\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Link as Link_NAV, useParams } from \"react-router-dom\";\r\nimport ButtonProgress from \"../../../../components/common/ButtonProgress/ButtonProgress\";\r\nimport Error from \"../../../../components/alerts/Error\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox, { CheckboxProps } from \"@material-ui/core/Checkbox\";\r\nimport HelperTexts from \"../../../../components/HelperTexts\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  user_details: {\r\n    flexGrow: 1,\r\n    margin: theme.spacing(2, 0, 2, 0),\r\n  },\r\n}));\r\n\r\nexport default function Index() {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const { token, email, username } = useParams();\r\n  const [resetInfo, setResetInfo] = useState({ token, email });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleForm = (event) => {\r\n    setResetInfo({\r\n      ...resetInfo,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const resetPassword = () => {\r\n    setErrors({});\r\n    Api()\r\n      .post(`/public/reset-password`, resetInfo)\r\n      .then((res) => {\r\n        swal(\"You have successfully changed your password.\");\r\n      })\r\n      .catch(\r\n        (err) =>\r\n          err.response &&\r\n          err.response.data &&\r\n          setErrors({\r\n            msg: err.response.data.data.msg,\r\n            ...err.response.data.data.params,\r\n          })\r\n      );\r\n  };\r\n\r\n  const cancelPasswordReset = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleLogOutOfDevices = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Reset Password\r\n        </Typography>\r\n\r\n        <div className={classes.user_details}>\r\n          <Grid container spacing={6} justify=\"center\">\r\n            <Grid item xs={1}>\r\n              <Avatar />\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n              <Grid container direction=\"column\">\r\n                <Typography variant=\"body2\">\r\n                  <strong>{username}</strong>\r\n                </Typography>\r\n                <Typography variant=\"body2\">{email}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <ButtonProgress\r\n                type=\"button\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                name=\"cancel\"\r\n                size=\"small\"\r\n                handleButtonClick={cancelPasswordReset}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n\r\n        {errors.msg && <Error message={errors.msg} />}\r\n\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"New password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleForm}\r\n            error={errors.password ? true : false}\r\n            helperText={\r\n              errors.password && <HelperTexts texts={errors.password} />\r\n            }\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"confirm_password\"\r\n            label=\"Repeat new password\"\r\n            type=\"password\"\r\n            id=\"confirm_password\"\r\n            onChange={handleForm}\r\n            error={errors.confirm_password ? true : false}\r\n            helperText={\r\n              errors.confirm_password && (\r\n                <HelperTexts texts={errors.confirm_password} />\r\n              )\r\n            }\r\n          />\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={state.checkedA}\r\n                onChange={handleLogOutOfDevices}\r\n                name=\"checkedA\"\r\n              />\r\n            }\r\n            label=\"Secondary\"\r\n          />\r\n\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={resetPassword}\r\n          >\r\n            Change password\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link\r\n                component={Link_NAV}\r\n                to=\"/public/auth/register\"\r\n                variant=\"body2\"\r\n              >\r\n                Not a user? Register\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link\r\n                component={Link_NAV}\r\n                to=\"/public/auth//login\"\r\n                variant=\"body2\"\r\n              >\r\n                {\"Already have an account? Sign In\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}