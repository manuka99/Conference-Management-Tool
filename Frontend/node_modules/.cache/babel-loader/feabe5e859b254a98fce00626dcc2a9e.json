{"ast":null,"code":"var _jsxFileName = \"F:\\\\MANUKA YASAS\\\\sliit_documents\\\\semister5\\\\AF\\\\project\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport api from \"./util/api\";\nimport { connect } from \"react-redux\";\nimport { fetch_user_data } from \"./Redux\";\nimport ErrorModelsContainer from \"./components/Modals/ErrorModelsContainer\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { AllRoutes } from \"./Routes/Routes\";\nimport Loading from \"./Pages/Loading/Loading\";\nimport { get_app_theme, set_app_theme } from \"./util/themeService\";\nimport { useLocation } from \"react-router-dom\";\nimport { SnackbarProvider } from \"notistack\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [locationRequired, setlocationRequired] = useState(\"/\");\n  const APP_THEME_DATA = get_app_theme(props.theme);\n  const APP_THEME = createMuiTheme(APP_THEME_DATA);\n  useEffect(() => {\n    api(true).get(\"/sanctum/csrf-cookie\");\n    setlocationRequired(location.pathname);\n    props.fetch_user_data(); // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    if (props.is2faRequired) navigate(\"/two-factor-challenge\");else if (props.login) {\n      locationRequired !== \"/login\" ? navigate(locationRequired) : navigate(\"/\");\n      setlocationRequired(\"/\");\n    } else if (props.logout) navigate(\"/login\"); // eslint-disable-next-line\n  }, [props.is2faRequired, props.login, props.logout]);\n  useEffect(() => {\n    navigate(props.redirect.route); // eslint-disable-next-line\n  }, [props.redirect.status]);\n  useEffect(() => {\n    set_app_theme(APP_THEME_DATA); // eslint-disable-next-line\n  }, [props.theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: APP_THEME,\n    children: /*#__PURE__*/_jsxDEV(SnackbarProvider, {\n      maxSnack: 3,\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      children: props.loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(ErrorModelsContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), AllRoutes()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lsmb5Qj0DO1l1aCk5Zk+/x41sGs=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.currentUser.loading,\n    login: state.currentUser.login,\n    is2faRequired: state.currentUser.is2faRequired,\n    logout: state.currentUser.logout,\n    theme: state.currentUser.theme,\n    redirect: state.redirect\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetch_user_data: () => dispatch(fetch_user_data())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/MANUKA YASAS/sliit_documents/semister5/AF/project/frontend/src/App.js"],"names":["useEffect","useState","useNavigate","api","connect","fetch_user_data","ErrorModelsContainer","createMuiTheme","ThemeProvider","AllRoutes","Loading","get_app_theme","set_app_theme","useLocation","SnackbarProvider","App","props","navigate","location","locationRequired","setlocationRequired","APP_THEME_DATA","theme","APP_THEME","get","pathname","is2faRequired","login","logout","redirect","route","status","vertical","horizontal","loading","mapStateToProps","state","currentUser","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport api from \"./util/api\";\nimport { connect } from \"react-redux\";\nimport { fetch_user_data } from \"./Redux\";\nimport ErrorModelsContainer from \"./components/Modals/ErrorModelsContainer\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { AllRoutes } from \"./Routes/Routes\";\nimport Loading from \"./Pages/Loading/Loading\";\nimport { get_app_theme, set_app_theme } from \"./util/themeService\";\nimport { useLocation } from \"react-router-dom\";\nimport { SnackbarProvider } from \"notistack\";\nimport \"./App.css\";\n\nfunction App(props) {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [locationRequired, setlocationRequired] = useState(\"/\");\n\n  const APP_THEME_DATA = get_app_theme(props.theme);\n  const APP_THEME = createMuiTheme(APP_THEME_DATA);\n\n  useEffect(() => {\n    api(true).get(\"/sanctum/csrf-cookie\");\n    setlocationRequired(location.pathname);\n    props.fetch_user_data();\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (props.is2faRequired) navigate(\"/two-factor-challenge\");\n    else if (props.login) {\n      locationRequired !== \"/login\"\n        ? navigate(locationRequired)\n        : navigate(\"/\");\n      setlocationRequired(\"/\");\n    } else if (props.logout) navigate(\"/login\");\n    // eslint-disable-next-line\n  }, [props.is2faRequired, props.login, props.logout]);\n\n  useEffect(() => {\n    navigate(props.redirect.route);\n    // eslint-disable-next-line\n  }, [props.redirect.status]);\n\n  useEffect(() => {\n    set_app_theme(APP_THEME_DATA);\n    // eslint-disable-next-line\n  }, [props.theme]);\n\n  return (\n    <ThemeProvider theme={APP_THEME}>\n      <SnackbarProvider\n        maxSnack={3}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n      >\n        {props.loading ? (\n          <Loading />\n        ) : (\n          <div className=\"App\">\n            <ErrorModelsContainer />\n            {AllRoutes()}\n          </div>\n        )}\n      </SnackbarProvider>\n    </ThemeProvider>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.currentUser.loading,\n    login: state.currentUser.login,\n    is2faRequired: state.currentUser.is2faRequired,\n    logout: state.currentUser.logout,\n    theme: state.currentUser.theme,\n    redirect: state.redirect,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetch_user_data: () => dispatch(fetch_user_data()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}