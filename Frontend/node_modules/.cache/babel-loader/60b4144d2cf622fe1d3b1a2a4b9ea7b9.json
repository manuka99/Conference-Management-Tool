{"ast":null,"code":"var _jsxFileName = \"F:\\\\MANUKA YASAS\\\\sliit_documents\\\\semister5\\\\AF\\\\project\\\\src\\\\frontend\\\\src\\\\components\\\\common\\\\SideNavigation\\\\SideNavBar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { clsx, useTheme, Drawer, List, Divider, IconButton, ChevronLeftIcon, ChevronRightIcon, MainDashStyles, Typography } from \"../../../assets/StyleImports\";\nimport SideNavItems from \"./SideNavItems\";\nimport { NavItems1, NavItems2 } from \"./NavItems\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport { Avatar } from \"@material-ui/core\";\nimport store from \"../../../Redux/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SideNavBar({\n  open,\n  handleDrawerOpen,\n  handleDrawerClose\n}) {\n  _s();\n\n  const classes = MainDashStyles();\n  const theme = useTheme();\n  const user_data = store.getState().currentUser.user_data;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 1,\n    children: /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      className: clsx(classes.drawer, {\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open\n      }),\n      classes: {\n        paper: clsx({\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n          [classes.paper]: true\n        })\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.profile} ${!open && classes.hideProfile}`,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"Person\",\n            className: classes.avatar,\n            src: \"/images/user-avatar.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.name,\n            children: [user_data.user.fname, \" \", user_data.user.lname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            className: classes.name,\n            children: user_data.roles.length > 0 ? user_data.roles.map(role => role.name) : \"Guest mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          className: `${classes.drawerStatusIcon} ${classes.drawerIcon}`,\n          onClick: handleDrawerClose,\n          children: theme.direction === \"rtl\" ? /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            className: classes.drawerIcon,\n            children: /*#__PURE__*/_jsxDEV(DashboardIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.disabled,\n              children: \"Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: /*#__PURE__*/_jsxDEV(SideNavItems, {\n            drawerOpenStatus: open,\n            navItems: NavItems1(),\n            handleDrawerOpen: handleDrawerOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            className: classes.drawerIcon,\n            children: /*#__PURE__*/_jsxDEV(DashboardIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.disabled,\n              children: \"Other Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: /*#__PURE__*/_jsxDEV(SideNavItems, {\n            navItems: NavItems2(),\n            handleDrawerOpen: handleDrawerOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SideNavBar, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = SideNavBar;\nexport default _c2 = /*#__PURE__*/React.memo(SideNavBar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SideNavBar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["F:/MANUKA YASAS/sliit_documents/semister5/AF/project/src/frontend/src/components/common/SideNavigation/SideNavBar.js"],"names":["React","clsx","useTheme","Drawer","List","Divider","IconButton","ChevronLeftIcon","ChevronRightIcon","MainDashStyles","Typography","SideNavItems","NavItems1","NavItems2","Paper","ListItem","ListItemIcon","ListItemText","DashboardIcon","Avatar","store","SideNavBar","open","handleDrawerOpen","handleDrawerClose","classes","theme","user_data","getState","currentUser","drawer","drawerOpen","drawerClose","paper","toolbar","profile","hideProfile","avatar","name","user","fname","lname","roles","length","map","role","drawerStatusIcon","drawerIcon","direction","disabled","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  clsx,\r\n  useTheme,\r\n  Drawer,\r\n  List,\r\n  Divider,\r\n  IconButton,\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n  MainDashStyles,\r\n  Typography,\r\n} from \"../../../assets/StyleImports\";\r\nimport SideNavItems from \"./SideNavItems\";\r\nimport { NavItems1, NavItems2 } from \"./NavItems\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport store from \"../../../Redux/store\";\r\n\r\nfunction SideNavBar({ open, handleDrawerOpen, handleDrawerClose }) {\r\n  const classes = MainDashStyles();\r\n  const theme = useTheme();\r\n  const user_data = store.getState().currentUser.user_data;\r\n\r\n  return (\r\n    <Paper elevation={1}>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n            [classes.paper]: true,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <div className={`${classes.profile} ${!open && classes.hideProfile}`}>\r\n            <Avatar\r\n              alt=\"Person\"\r\n              className={classes.avatar}\r\n              src=\"/images/user-avatar.png\"\r\n            />\r\n            <Typography variant=\"h6\" className={classes.name}>\r\n              {user_data.user.fname} {user_data.user.lname}\r\n            </Typography>\r\n            <Typography variant=\"body2\" className={classes.name}>\r\n              {user_data.roles.length > 0\r\n                ? user_data.roles.map((role) => role.name)\r\n                : \"Guest mode\"}\r\n            </Typography>\r\n          </div>\r\n          <IconButton\r\n            className={`${classes.drawerStatusIcon} ${classes.drawerIcon}`}\r\n            onClick={handleDrawerClose}\r\n          >\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem>\r\n            <ListItemIcon className={classes.drawerIcon}>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary={\r\n                <Typography className={classes.disabled}>Dashboard</Typography>\r\n              }\r\n            />\r\n          </ListItem>\r\n          <List>\r\n            <SideNavItems\r\n              drawerOpenStatus={open}\r\n              navItems={NavItems1()}\r\n              handleDrawerOpen={handleDrawerOpen}\r\n            />\r\n          </List>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemIcon className={classes.drawerIcon}>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary={\r\n                <Typography className={classes.disabled}>\r\n                  Other Actions\r\n                </Typography>\r\n              }\r\n            />\r\n          </ListItem>\r\n          <List>\r\n            <SideNavItems\r\n              navItems={NavItems2()}\r\n              handleDrawerOpen={handleDrawerOpen}\r\n            />\r\n          </List>\r\n        </List>\r\n      </Drawer>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default React.memo(SideNavBar);\r\n"]},"metadata":{},"sourceType":"module"}