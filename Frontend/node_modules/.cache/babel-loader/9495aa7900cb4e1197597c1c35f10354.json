{"ast":null,"code":"var _jsxFileName = \"F:\\\\MANUKA YASAS\\\\sliit_documents\\\\semister5\\\\AF\\\\project\\\\frontend\\\\src\\\\components\\\\ThemeSwitch\\\\ThemeSwitch.js\";\nimport React from \"react\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { connect } from \"react-redux\";\nimport { set_app_theme } from \"../../Redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IOSSwitch = withStyles(theme => createStyles({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1)\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(16px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#074FFF\",\n        opacity: 1,\n        border: \"none\"\n      }\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"blue\",\n      border: \"6px solid #fff\"\n    }\n  },\n  thumb: {\n    width: 24,\n    height: 24\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: \"#808080\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"])\n  },\n  checked: {},\n  focusVisible: {}\n}))(({\n  classes,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    focusVisibleClassName: classes.focusVisible,\n    disableRipple: true,\n    classes: {\n      root: classes.root,\n      switchBase: classes.switchBase,\n      thumb: classes.thumb,\n      track: classes.track,\n      checked: classes.checked\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n});\n\nfunction ThemeSwitch({\n  theme,\n  set_app_theme\n}) {\n  const handleChange = () => {\n    set_app_theme(theme === \"dark\" ? \"light\" : \"dark\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(IOSSwitch, {\n        checked: theme === \"dark\",\n        onChange: handleChange,\n        name: \"checked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"noWrap\",\n        children: \"Dark mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ThemeSwitch;\n\nconst mapStateToProps = state => {\n  return {\n    theme: state.currentUser.theme\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    set_app_theme: theme => dispatch(set_app_theme(theme))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeSwitch);\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeSwitch\");","map":{"version":3,"sources":["F:/MANUKA YASAS/sliit_documents/semister5/AF/project/frontend/src/components/ThemeSwitch/ThemeSwitch.js"],"names":["React","withStyles","createStyles","FormGroup","FormControlLabel","Switch","Typography","connect","set_app_theme","IOSSwitch","theme","root","width","height","padding","margin","spacing","switchBase","transform","color","palette","common","white","backgroundColor","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","props","ThemeSwitch","handleChange","mapStateToProps","state","currentUser","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { connect } from \"react-redux\";\r\nimport { set_app_theme } from \"../../Redux\";\r\n\r\nconst IOSSwitch = withStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 42,\r\n      height: 26,\r\n      padding: 0,\r\n      margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n      padding: 1,\r\n      \"&$checked\": {\r\n        transform: \"translateX(16px)\",\r\n        color: theme.palette.common.white,\r\n        \"& + $track\": {\r\n          backgroundColor: \"#074FFF\",\r\n          opacity: 1,\r\n          border: \"none\",\r\n        },\r\n      },\r\n      \"&$focusVisible $thumb\": {\r\n        color: \"blue\",\r\n        border: \"6px solid #fff\",\r\n      },\r\n    },\r\n    thumb: {\r\n      width: 24,\r\n      height: 24,\r\n    },\r\n    track: {\r\n      borderRadius: 26 / 2,\r\n      border: `1px solid ${theme.palette.grey[400]}`,\r\n      backgroundColor: \"#808080\",\r\n      opacity: 1,\r\n      transition: theme.transitions.create([\"background-color\", \"border\"]),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n  })\r\n)(({ classes, ...props }) => {\r\n  return (\r\n    <Switch\r\n      focusVisibleClassName={classes.focusVisible}\r\n      disableRipple\r\n      classes={{\r\n        root: classes.root,\r\n        switchBase: classes.switchBase,\r\n        thumb: classes.thumb,\r\n        track: classes.track,\r\n        checked: classes.checked,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nfunction ThemeSwitch({ theme, set_app_theme }) {\r\n  const handleChange = () => {\r\n    set_app_theme(theme === \"dark\" ? \"light\" : \"dark\");\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      <FormControlLabel\r\n        control={\r\n          <IOSSwitch\r\n            checked={theme === \"dark\"}\r\n            onChange={handleChange}\r\n            name=\"checked\"\r\n          />\r\n        }\r\n        label={<Typography variant=\"noWrap\">Dark mode</Typography>}\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    theme: state.currentUser.theme,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    set_app_theme: (theme) => dispatch(set_app_theme(theme)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeSwitch);\r\n"]},"metadata":{},"sourceType":"module"}