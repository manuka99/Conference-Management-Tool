{"ast":null,"code":"var _jsxFileName = \"F:\\\\MANUKA YASAS\\\\sliit_documents\\\\semister5\\\\AF\\\\project\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { fetch_user_data } from \"./Redux\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport { AllRoutes } from \"./Routes/Routes\";\nimport { useLocation } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const navigate = useNavigate(); // to get the location user wanted to go initially\n\n  const location = useLocation();\n  useEffect(() => {\n    props.fetch_user_data(); // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    navigate(location.pathname); // eslint-disable-next-line\n  }, [props.loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: AllRoutes()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"5Xe507WE8x2hm8G4TXeshrMsmmQ=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.currentUser.loading,\n    login: state.currentUser.login,\n    logout: state.currentUser.logout\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetch_user_data: () => dispatch(fetch_user_data())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/MANUKA YASAS/sliit_documents/semister5/AF/project/frontend/src/App.js"],"names":["React","useEffect","useState","fetch_user_data","connect","AllRoutes","useLocation","useNavigate","App","props","navigate","location","pathname","loading","mapStateToProps","state","currentUser","login","logout","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,WAAP;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B,CADkB,CAElB;;AACA,QAAMI,QAAQ,GAAGL,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAACN,eAAN,GADc,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAF,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACC,QAAQ,CAACC,QAAV,CAAR,CADc,CAEd;AACD,GAHQ,EAGN,CAACH,KAAK,CAACI,OAAP,CAHM,CAAT;AAKA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAAsBR,SAAS;AAA/B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAhBQG,G;UACUD,W,EAEAD,W;;;KAHVE,G;;AAkBT,MAAMM,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,OAAO,EAAEE,KAAK,CAACC,WAAN,CAAkBH,OADtB;AAELI,IAAAA,KAAK,EAAEF,KAAK,CAACC,WAAN,CAAkBC,KAFpB;AAGLC,IAAAA,MAAM,EAAEH,KAAK,CAACC,WAAN,CAAkBE;AAHrB,GAAP;AAKD,CAND;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLjB,IAAAA,eAAe,EAAE,MAAMiB,QAAQ,CAACjB,eAAe,EAAhB;AAD1B,GAAP;AAGD,CAJD;;AAMA,eAAeC,OAAO,CAACU,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CX,GAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetch_user_data } from \"./Redux\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport { AllRoutes } from \"./Routes/Routes\";\nimport { useLocation } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction App(props) {\n  const navigate = useNavigate();\n  // to get the location user wanted to go initially\n  const location = useLocation();\n\n  useEffect(() => {\n    props.fetch_user_data();\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    navigate(location.pathname);\n    // eslint-disable-next-line\n  }, [props.loading]);\n\n  return <div className=\"App\">{AllRoutes()}</div>;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.currentUser.loading,\n    login: state.currentUser.login,\n    logout: state.currentUser.logout,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetch_user_data: () => dispatch(fetch_user_data()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}